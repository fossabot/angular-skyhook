var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/AddSubscription.html",[0,0.068,1,2.321]],["body/interfaces/AddSubscription.html",[0,0.09,1,3.716,2,0.799,3,0.548,4,3.471,5,0.869,6,2.001,7,2.815,8,2.165,9,3.966,10,3.101,11,2.56,12,4.718,13,4.753,14,4.718,15,3.284,16,1.309,17,1.72,18,0.668,19,4.718,20,5.089,21,2.165,22,4.718,23,1.72,24,0.027,25,1.597,26,0.437,27,1.189,28,1.02,29,0.024,30,0.024]],["title/interfaces/BackendFactoryInput.html",[0,0.068,31,2.598]],["body/interfaces/BackendFactoryInput.html",[0,0.083,2,0.733,3,0.503,5,0.798,11,2.349,18,0.613,24,0.029,26,0.401,28,0.936,29,0.023,30,0.023,31,3.185,32,2.846,33,0.607,34,1.836,35,1.568,36,1.578,37,3.639,38,2.846,39,2.156,40,3.639,41,1.836,42,5.365,43,1.362,44,2.846,45,4.51,46,4.608,47,4.51,48,3.185,49,2.574,50,2.125,51,5.365,52,4.329,53,2.156,54,3.185,55,3.639,56,1.816,57,1.265,58,2.574]],["title/interfaces/BackendInput.html",[0,0.068,59,2.598]],["body/interfaces/BackendInput.html",[0,0.094,2,0.833,3,0.571,5,0.906,18,0.696,24,0.026,26,0.455,29,0.025,30,0.025,32,3.232,33,0.512,34,2.086,35,1.896,39,2.448,46,4.263,56,1.962,59,3.617,60,2.458,61,1.932,62,4.134]],["title/interfaces/ConnectionBase.html",[0,0.068,63,1.758]],["body/interfaces/ConnectionBase.html",[0,0.06,2,0.53,3,0.364,5,0.577,6,1.328,7,2.159,8,2.464,13,2.632,15,2.353,16,1.161,17,1.142,18,0.443,20,3.646,21,1.437,23,1.814,24,0.029,25,1.468,26,0.522,27,1.093,28,1.22,29,0.018,30,0.018,33,0.452,34,1.84,50,2.056,61,1.23,63,1.559,64,1.862,65,1.862,66,1.437,67,0.85,68,1.454,69,1.581,70,2.464,71,3.131,72,3.131,73,2.304,74,2.304,75,1.142,76,2.058,77,3.131,78,1.437,79,2.304,80,2.278,81,1.84,82,1.862,83,0.85,84,3.131,85,1.06,86,3.131,87,2.304,88,1.328,89,2.579,90,3.131,91,1.99,92,3.131,93,1.23,94,2.632,95,4.337,96,3.131,97,1.093,98,3.131,99,3.131,100,3.131,101,1.99,102,2.632,103,1.862,104,1.699,105,3.131,106,3.131,107,3.131,108,2.632,109,3.131,110,2.159,111,2.632,112,2.304,113,1.84,114,3.131,115,0.734,116,1.142,117,1.364,118,2.058,119,1.699,120,3.131,121,2.632,122,1.958,123,2.632,124,3.131,125,2.304,126,2.058,127,2.632,128,1.559,129,1.559,130,3.131,131,3.131,132,3.131,133,0.915,134,2.058,135,3.131,136,3.131,137,1.328,138,1.862,139,1.437,140,2.304,141,3.131,142,2.159,143,2.058,144,2.058,145,3.131,146,2.058,147,3.131,148,1.862,149,3.131,150,0.915,151,2.632,152,2.632,153,2.632,154,1.328,155,1.559,156,3.131,157,1.328,158,1.559,159,2.632,160,2.304,161,2.632,162,1.699,163,0.915,164,3.131,165,1.559,166,2.579,167,1.437,168,2.632,169,3.131,170,2.304,171,0.85,172,3.131,173,2.632]],["title/interfaces/DragLayer.html",[0,0.068,174,1.916]],["body/interfaces/DragLayer.html",[0,0.052,2,0.46,3,0.315,5,0.5,16,0.848,17,0.989,18,0.384,23,1.429,24,0.027,25,0.919,26,0.531,27,0.684,28,0.587,29,0.017,30,0.017,33,0.633,34,1.663,35,1.562,41,1.151,43,0.854,44,1.784,50,1.677,57,1.345,58,1.614,61,1.808,63,1.952,64,1.614,65,1.614,66,1.245,69,1.948,70,1.245,88,1.151,97,0.987,108,2.282,110,1.351,111,2.282,115,1.125,116,2.03,117,1.585,119,1.473,122,1.677,125,1.997,126,2.576,139,1.245,148,2.331,150,0.793,158,2.291,161,2.282,162,1.473,163,1.145,165,1.351,171,1.368,173,2.282,174,2.127,175,1.473,176,0.989,177,2.555,178,1.952,179,2.714,180,2.612,181,2.714,182,1.997,183,1.473,184,1.784,185,1.784,186,2.714,187,2.714,188,2.331,189,3.178,190,2.282,191,2.282,192,2.282,193,1.997,194,1.784,195,4.578,196,1.997,197,4.097,198,2.282,199,1.345,200,2.127,201,3.024,202,2.282,203,1.54,204,0.634,205,2.714,206,2.331,207,1.784,208,2.714,209,1.997,210,1.066,211,2.714,212,0.989,213,1.614,214,2.714,215,1.151,216,2.736,217,1.245,218,1.997,219,1.245,220,1.784,221,1.997,222,1.351,223,2.884,224,1.245,225,1.558,226,1.997,227,2.714,228,2.282,229,1.997,230,1.997,231,2.714,232,1.066,233,1.151,234,1.614,235,2.714,236,2.714,237,2.282,238,3.92,239,2.714,240,2.714,241,1.997,242,1.663,243,1.614,244,1.245,245,2.282,246,1.997,247,2.714,248,1.784,249,2.714,250,2.282,251,1.614,252,2.714,253,1.473,254,1.066,255,2.714,256,1.997,257,1.997,258,1.066,259,1.614,260,1.997,261,2.127,262,1.614,263,3.385,264,1.473,265,2.282,266,2.714,267,1.784,268,1.997,269,1.245,270,2.714]],["title/interfaces/DragLayerMonitor.html",[0,0.068,216,2.1]],["body/interfaces/DragLayerMonitor.html",[0,0.093,2,0.825,3,0.566,5,0.898,16,1.246,17,1.777,18,0.69,24,0.026,28,1.054,29,0.024,30,0.024,53,2.426,97,1.228,115,0.825,142,3.056,174,2.644,215,2.067,216,2.898,271,4.096,272,3.203,273,2.067,274,2.426,275,1.915,276,2.236,277,3.585,278,3.203,279,2.644]],["title/directives/DragPreviewDirective.html",[280,1.032,281,2.321]],["body/directives/DragPreviewDirective.html",[2,0.792,3,0.543,5,0.862,18,0.662,24,0.027,26,0.521,27,1.178,29,0.024,30,0.024,33,0.487,35,1.367,85,1.583,115,0.953,133,1.367,178,2.8,180,2.386,184,3.074,199,1.644,204,1.092,242,2.386,280,1.367,281,3.074,282,3.074,283,1.984,284,1.897,285,2.781,286,3.441,287,3.074,288,6.031,289,3.272,290,1.984]],["title/interfaces/DragPreviewOptions.html",[0,0.068,289,1.916]],["body/interfaces/DragPreviewOptions.html",[0,0.059,2,0.526,3,0.361,5,0.572,18,0.44,24,0.025,26,0.521,27,1.593,29,0.018,30,0.023,33,0.449,34,1.318,36,1.133,53,2.148,56,1.46,57,0.908,82,1.848,85,1.812,115,1.08,138,2.565,143,2.042,148,1.848,150,1.261,157,1.83,167,1.98,171,0.843,176,2.122,177,1.426,180,2.654,183,2.341,184,2.835,189,1.848,195,2.286,199,1.564,203,1.221,204,1.008,212,1.133,219,1.98,275,1.947,279,2.341,284,0.977,289,1.686,291,2.286,292,5.353,293,5.353,294,4.166,295,5.353,296,5.353,297,3.116,298,3.518,299,3.938,300,2.665,301,4.5,302,3.158,303,3.174,304,2.565,305,3.107,306,3.174,307,3.924,308,4.5,309,2.612,310,4.314,311,4.314,312,3.107,313,4.166,314,2.286,315,2.286,316,2.612,317,1.848,318,1.426,319,1.848,320,3.107,321,3.107,322,1.547,323,2.042,324,3.107,325,2.612,326,3.107,327,4.314,328,3.107,329,3.107,330,1.221,331,1.848,332,2.042,333,4.314,334,3.107,335,1.686,336,3.107,337,3.107,338,1.686,339,1.848,340,2.835,341,1.98,342,3.627]],["title/interfaces/DragSource.html",[0,0.068,284,1.111]],["body/interfaces/DragSource.html",[0,0.055,2,0.488,3,0.335,5,0.531,8,2.51,16,1.12,17,1.051,18,0.408,23,1.734,24,0.029,25,1.753,26,0.587,27,1.472,28,1.264,29,0.017,30,0.017,33,0.57,35,0.842,36,1.734,50,1.492,56,1.385,61,1.133,63,1.435,64,1.714,65,1.714,66,1.322,67,1.406,68,1.66,70,1.878,73,2.12,75,1.051,79,2.12,83,0.782,93,1.133,104,1.564,110,1.435,115,0.806,116,1.051,122,1.051,129,1.435,150,0.842,152,2.423,158,1.435,163,1.39,171,0.782,180,1.222,183,3.083,185,2.689,199,1.196,204,1.111,210,1.869,225,0.976,242,2.197,244,1.322,251,1.714,253,1.564,254,1.869,257,3.01,258,1.608,264,1.564,280,1.196,283,2.018,284,1.787,289,2.22,297,1.435,317,2.433,322,2.037,330,1.869,343,1.222,344,1.714,345,2.423,346,2.423,347,1.894,348,2.423,349,3.44,350,3.44,351,3.999,352,3.5,353,2.882,354,2.689,355,2.433,356,3.01,357,2.882,358,1.714,359,2.12,360,2.12,361,2.882,362,2.12,363,2.689,364,3.44,365,3.01,366,2.882,367,2.433,368,2.423,369,1.714,370,2.882,371,2.197,372,3.127,373,1.894,374,1.222,375,1.133,376,2.423,377,2.12,378,2.12,379,3.44,380,2.882,381,2.882,382,0.673,383,4.092,384,1.714,385,2.882,386,2.882,387,2.882,388,2.882,389,2.882,390,2.882,391,2.423,392,2.882,393,2.882,394,1.564]],["title/directives/DragSourceDirective.html",[280,1.032,395,2.321]],["body/directives/DragSourceDirective.html",[2,0.729,3,0.5,5,0.793,18,0.61,24,0.028,26,0.563,27,1.085,29,0.023,30,0.023,33,0.606,35,1.259,43,1.355,53,2.144,67,1.169,68,1.7,101,1.976,133,1.259,154,1.827,171,1.169,176,1.57,177,1.976,178,2.663,180,1.827,193,3.168,199,1.259,204,1.006,242,2.268,275,1.692,280,1.259,282,2.83,283,1.827,284,2.033,286,3.168,287,2.83,290,1.827,294,3.62,323,2.83,330,1.692,339,2.561,341,1.976,367,3.459,371,1.827,395,2.83,396,5.347,397,5.347,398,3.62,399,3.62,400,4.306,401,4.306]],["title/interfaces/DragSourceMonitor.html",[0,0.068,402,2.1]],["body/interfaces/DragSourceMonitor.html",[0,0.067,2,0.589,3,0.404,5,0.641,6,1.476,16,1.213,17,1.268,18,0.493,24,0.027,27,0.876,28,1.438,29,0.026,30,0.02,33,0.485,53,2.32,60,1.476,69,1.268,83,1.751,85,1.178,97,0.876,115,0.89,133,1.362,142,2.794,154,1.476,157,1.476,163,1.362,204,0.813,215,1.476,217,1.596,244,1.596,248,2.287,253,1.888,258,1.831,260,2.559,272,2.287,273,1.476,274,1.732,275,2.366,276,2.138,277,3.428,278,2.287,279,2.85,315,2.559,318,1.596,330,1.367,338,1.888,369,2.069,373,2.287,375,1.367,382,1.366,384,2.069,402,2.069,403,2.925,404,3.479,405,4.524,406,4.717,407,4.416,408,2.925,409,2.32,410,1.732,411,3.479,412,2.925,413,1.732,414,3.479,415,3.479,416,2.925,417,2.559,418,2.069,419,3.479,420,2.925,421,2.925,422,3.124,423,2.771,424,2.559,425,2.925,426,2.925,427,2.925,428,2.559,429,1.888,430,2.925,431,2.559,432,3.062,433,2.069,434,2.559,435,2.069]],["title/interfaces/DragSourceOptions.html",[0,0.068,367,2.1]],["body/interfaces/DragSourceOptions.html",[0,0.084,2,0.743,3,0.51,5,0.808,18,0.621,24,0.028,26,0.406,27,1.478,29,0.023,30,0.023,33,0.457,34,2.295,35,1.282,56,1.831,57,1.282,85,1.485,115,0.743,150,1.282,176,1.6,196,3.228,206,3.739,217,2.013,225,1.485,246,3.228,258,1.724,284,1.701,291,3.228,339,2.609,340,3.556,367,2.609,371,1.861,436,3.228,437,4.93,438,4.024,439,3.556,440,4.547,441,3.228,442,2.609,443,3.228,444,4.388,445,4.388,446,2.884,447,3.228,448,4.388]],["title/interfaces/DragSourceSpec.html",[0,0.068,375,1.388]],["body/interfaces/DragSourceSpec.html",[0,0.09,2,0.4,3,0.274,5,0.435,6,1.003,16,1.019,17,0.862,18,0.335,23,1.932,24,0.029,25,1.596,26,0.553,27,1.525,28,1.292,29,0.018,30,0.018,33,0.246,35,0.691,36,0.862,41,1.003,43,0.743,54,1.739,56,0.8,60,1.502,61,0.929,75,0.862,80,1.003,81,1.003,83,1.439,87,1.739,91,1.085,97,1.384,101,1.085,110,1.177,115,1.012,117,1.335,118,1.554,122,0.862,128,1.177,129,1.177,133,1.241,142,1.763,150,1.035,163,1.035,166,1.406,171,1.534,175,1.282,176,1.548,182,1.739,188,2.106,201,2.327,203,0.929,204,1.284,206,2.106,207,1.554,212,0.862,215,1.502,217,1.085,218,1.739,219,1.085,225,1.199,232,0.929,251,3.152,254,0.929,261,1.282,269,1.625,273,1.502,275,0.929,276,1.085,279,1.921,290,1.502,297,1.763,317,1.406,318,1.085,331,1.406,335,1.282,344,1.406,347,2.327,358,1.406,371,1.003,375,0.929,377,1.739,382,1.101,384,1.406,394,2.739,402,3.553,405,2.605,409,1.177,410,2.347,413,1.177,422,2.803,423,1.406,431,1.739,433,2.106,435,1.406,437,1.987,438,2.327,446,1.554,447,1.739,449,1.987,450,1.739,451,1.282,452,1.406,453,1.554,454,1.987,455,1.739,456,2.364,457,2.364,458,2.364,459,2.364,460,1.987,461,2.364,462,2.976,463,4.245,464,2.364,465,3.541,466,3.541,467,1.739,468,1.554,469,2.364,470,3.541,471,2.364,472,1.987,473,2.364,474,2.364,475,1.987,476,2.364,477,2.364,478,1.987,479,2.364,480,1.987,481,1.987,482,2.327,483,1.987,484,2.364,485,1.739,486,2.364,487,1.987,488,1.987,489,1.987,490,1.987,491,1.987,492,2.364,493,2.106,494,2.364,495,2.364,496,1.406,497,1.987,498,1.987,499,2.364,500,1.406,501,2.364,502,2.364,503,2.364,504,1.554,505,2.364,506,1.282,507,3.541,508,1.739,509,2.364,510,1.987,511,2.364,512,1.739,513,2.364,514,1.987,515,2.364,516,2.106,517,2.364,518,1.554,519,1.739,520,1.987,521,1.739,522,1.085,523,1.987,524,1.739,525,1.987,526,1.739,527,1.987]],["title/interfaces/DropTarget.html",[0,0.068,343,1.498]],["body/interfaces/DropTarget.html",[0,0.072,2,0.637,3,0.437,5,0.693,6,1.595,8,2.505,16,1.18,17,1.371,18,0.532,23,1.788,24,0.027,25,1.66,26,0.588,27,1.236,28,1.298,29,0.021,30,0.021,33,0.511,35,1.099,36,1.788,50,1.371,56,1.273,57,1.099,61,1.477,63,1.872,64,2.236,65,2.236,67,1.482,68,1.691,69,1.371,70,1.725,75,1.371,78,1.725,83,1.482,104,2.04,110,1.872,115,0.637,116,1.371,122,1.788,129,1.872,163,1.099,183,2.962,199,1.433,210,1.927,244,1.725,251,2.236,254,1.477,257,2.766,258,1.477,264,2.04,280,1.099,283,2.08,284,1.543,317,2.236,322,1.872,330,2.145,343,2.315,351,4.589,352,3.608,354,2.471,355,2.236,356,2.766,363,2.471,364,3.161,368,3.161,369,2.236,372,3.588,373,2.471,374,1.595,382,1.275,413,1.872,506,2.04,522,1.725,528,2.04,529,4.905,530,3.76,531,3.76,532,3.224]],["title/directives/DropTargetDirective.html",[280,1.032,533,2.598]],["body/directives/DropTargetDirective.html",[2,0.729,3,0.5,5,0.793,10,3.515,18,0.61,23,1.57,24,0.027,25,1.458,26,0.538,27,1.085,28,0.931,29,0.023,30,0.023,33,0.448,43,1.355,67,1.169,68,1.7,101,1.976,110,2.144,154,1.827,171,1.169,193,3.168,199,1.259,230,3.934,242,2.268,280,1.259,282,2.83,283,2.467,286,3.168,287,2.83,330,1.692,343,2.704,382,1.006,398,3.62,399,3.62,532,2.83,533,3.168,534,6.531,535,5.347,536,5.347,537,3.934,538,5.347,539,5.347,540,4.306,541,4.306]],["title/interfaces/DropTargetMonitor.html",[0,0.068,542,2.1]],["body/interfaces/DropTargetMonitor.html",[0,0.067,2,0.593,3,0.407,5,0.645,6,1.485,16,1.217,17,1.276,18,0.496,23,1.276,24,0.027,25,1.185,26,0.488,27,1.417,28,1.428,29,0.026,30,0.02,33,0.365,53,2.33,60,1.485,69,1.276,81,1.985,83,1.785,85,1.185,97,0.882,115,0.792,128,1.743,133,1.368,144,3.076,146,3.698,157,1.485,163,1.368,215,1.485,217,2.147,219,1.607,222,1.743,232,1.376,244,1.607,253,1.9,258,1.839,272,2.301,273,1.485,274,1.743,275,2.37,276,2.147,277,3.443,278,2.301,279,2.86,290,1.485,315,2.576,322,1.743,330,1.376,365,2.576,369,2.082,373,2.301,382,1.409,384,2.082,406,4.729,407,4.431,408,2.943,409,1.743,423,2.783,424,2.576,425,2.943,426,2.943,427,2.943,428,3.877,429,1.9,430,2.943,431,2.576,432,2.301,433,2.082,434,3.443,542,2.082,543,2.943,544,3.501,545,3.501,546,4.679,547,3.501,548,3.501,549,2.943,550,3.501]],["title/interfaces/DropTargetSpec.html",[0,0.068,78,1.621]],["body/interfaces/DropTargetSpec.html",[0,0.063,2,0.555,3,0.38,5,0.604,6,1.39,11,1.777,16,1.279,17,1.194,18,0.464,23,2.089,24,0.027,25,1.725,26,0.531,27,1.575,28,1.279,29,0.022,30,0.019,33,0.466,43,1.03,53,1.631,57,0.957,60,1.898,75,1.194,78,1.503,80,1.39,81,2.161,83,1.716,85,1.109,91,1.503,97,1.284,101,1.503,110,2.228,115,0.758,117,1.602,128,1.631,133,1.489,146,3.349,148,1.948,150,0.957,163,1.489,166,1.948,171,1.383,176,1.194,188,3.03,190,2.754,200,1.777,204,1.045,212,1.194,215,1.39,217,2.053,224,1.503,225,1.853,232,1.287,258,1.758,269,1.503,273,1.39,275,1.287,278,2.153,279,1.777,285,1.948,290,1.39,317,1.948,322,1.631,369,1.948,375,1.758,382,1.414,409,1.631,410,2.228,422,1.948,423,1.948,428,3.291,433,1.948,434,2.41,447,3.291,450,2.41,451,1.777,452,2.66,453,2.153,493,1.948,496,1.948,497,2.754,500,1.948,519,2.41,520,2.754,521,2.41,522,2.053,523,2.754,524,2.41,525,2.754,526,2.41,527,2.754,542,3.666,551,2.754,552,2.153,553,3.276,554,3.276,555,2.754,556,2.41,557,3.276,558,3.276,559,3.276,560,2.754,561,3.276,562,3.276]],["title/interfaces/MonitorBase.html",[0,0.068,274,1.758]],["body/interfaces/MonitorBase.html",[0,0.067,2,0.593,3,0.407,5,0.645,16,1.14,18,0.496,24,0.028,26,0.324,28,1.428,29,0.02,30,0.02,38,2.301,67,1.27,97,0.882,115,1.093,157,2.789,199,1.368,200,2.539,203,1.376,204,0.818,219,2.826,222,2.33,223,4.313,225,2.186,274,1.743,276,1.607,302,3.181,303,4.139,371,1.485,375,1.376,435,3.134,563,2.943,564,2.943,565,2.301,566,2.082,567,5.271,568,5.271,569,5.271,570,5.271,571,5.271,572,5.271,573,5.271,574,5.863,575,4.729,576,3.501,577,4.679,578,3.501,579,4.679,580,2.943,581,2.943]],["title/interfaces/Offset.html",[0,0.068,302,1.916]],["body/interfaces/Offset.html",[0,0.092,2,0.813,3,0.558,5,0.884,18,0.68,24,0.027,26,0.565,29,0.024,30,0.024,56,1.934,60,2.037,263,4.487,297,3.143,302,2.605,582,3.532,583,3.532,584,4.801,585,4.801,586,5.306,587,5.306]],["title/modules/SkyhookDndModule.html",[39,1.758,588,1.758]],["body/modules/SkyhookDndModule.html",[2,0.875,3,0.6,24,0.025,29,0.025,30,0.025,32,3.396,39,2.572,49,3.739,588,2.572,589,3.801]],["title/injectables/SkyhookDndService.html",[75,1.288,590,1.498]],["body/injectables/SkyhookDndService.html",[1,3.737,2,0.489,3,0.335,4,2.124,5,0.755,6,1.225,7,2.371,8,2.889,16,1.121,18,0.409,21,1.325,23,2.132,24,0.028,25,1.612,26,0.596,27,1.2,28,1.03,29,0.017,30,0.017,33,0.427,41,1.225,43,0.908,67,0.784,68,1.197,70,1.88,75,1.053,76,1.898,78,1.88,80,1.738,83,1.112,85,0.977,89,2.436,91,2.511,93,1.135,103,2.436,115,0.878,118,1.898,133,1.197,137,2.02,150,1.197,154,1.225,157,2.411,163,1.599,165,2.04,171,1.293,174,2.812,199,1.197,201,1.898,204,1.112,207,1.898,210,1.871,217,1.325,225,1.925,229,2.124,261,1.566,265,2.427,280,0.844,284,1.839,290,1.738,300,1.438,330,1.135,339,1.717,343,2.198,365,3.503,371,1.738,372,2.693,374,1.225,375,1.871,382,1.112,418,1.717,429,2.223,433,2.436,467,2.124,472,2.427,490,2.427,493,1.717,496,2.436,528,1.566,532,2.693,565,1.898,590,1.225,591,2.124,592,2.887,593,1.717,594,2.887,595,2.887,596,2.427,597,2.887,598,2.887,599,2.887,600,2.887,601,1.717,602,2.124,603,2.887,604,2.887,605,2.887,606,2.887,607,5.685,608,2.887,609,2.427,610,2.887,611,2.887,612,2.427,613,2.124,614,2.887,615,2.887,616,2.427,617,4.097,618,3.444,619,3.014,620,2.887,621,2.887,622,2.887]],["title/changelog.html",[203,1.182,516,1.788,623,3.007]],["body/changelog.html",[3,0.539,24,0.024,29,0.024,30,0.024,43,1.459,57,1.355,117,1.76,221,3.412,226,4.116,318,2.128,580,3.898,601,2.758,624,4.637,625,4.637,626,2.516,627,4.637,628,4.704,629,4.637,630,4.637,631,5.595,632,5.595,633,5.595,634,4.704,635,5.595,636,4.637,637,4.637,638,3.412,639,3.898,640,4.637,641,4.637,642,4.116,643,3.898,644,4.704,645,4.637,646,4.637,647,4.637,648,2.516,649,4.637]],["title/coverage.html",[650,3.956]],["body/coverage.html",[0,0.127,1,2.296,3,0.406,4,3.438,24,0.029,26,0.323,29,0.02,30,0.02,31,2.57,32,3.071,59,2.57,63,1.74,64,3.343,65,3.343,75,1.274,78,1.603,93,1.373,155,2.621,174,1.896,204,0.816,216,2.078,271,2.937,272,3.46,274,1.74,280,1.539,281,2.296,282,3.46,284,1.099,289,1.896,291,3.438,302,1.896,343,1.482,367,2.078,375,1.373,382,0.816,395,2.296,402,2.078,403,2.937,449,2.937,450,3.438,533,2.57,542,2.078,543,2.937,551,2.937,563,2.937,564,2.937,582,2.57,583,2.57,590,1.482,626,1.896,650,2.937,651,3.494,652,3.494,653,5.677,654,5.859,655,6.029,656,5.859,657,3.494,658,4.673,659,3.494,660,4.426,661,2.937,662,5.265,663,2.937,664,2.937,665,3.494,666,3.494]],["title/dependencies.html",[224,1.935,642,2.212]],["body/dependencies.html",[7,2.478,24,0.029,29,0.025,30,0.025,113,2.111,224,2.678,667,3.662,668,6.192,669,4.977,670,4.977,671,4.977,672,4.184,673,4.977,674,4.977]],["title/index.html",[18,0.426,203,1.182,516,1.788]],["body/index.html",[0,0.046,3,0.279,11,1.303,15,1.303,24,0.015,26,0.222,29,0.015,30,0.015,33,0.555,34,1.019,35,1.558,36,1.306,37,2.019,41,1.019,43,1.965,44,1.579,57,0.702,61,1.867,66,1.102,67,0.652,80,1.019,81,1.52,83,1.29,88,1.019,101,1.644,112,1.767,113,2.628,115,0.962,117,1.348,119,1.303,122,0.876,126,1.579,128,1.784,133,0.702,137,2.576,138,1.428,139,2.181,148,1.428,150,1.047,154,1.818,162,1.303,167,1.102,171,0.652,175,2.325,178,2.134,183,1.303,188,1.428,191,2.019,194,1.579,201,2.355,202,2.019,203,0.944,207,1.579,209,1.767,212,1.306,220,1.579,221,2.636,224,1.102,225,1.213,232,1.408,234,1.428,241,1.767,243,1.428,254,1.408,259,1.428,261,1.303,268,1.767,276,1.102,298,1.579,304,2.131,307,1.579,308,2.019,314,1.767,316,2.019,318,1.102,331,1.428,332,2.355,338,1.944,341,1.102,345,2.019,347,2.355,363,1.579,374,1.019,382,0.561,409,1.196,410,1.196,413,1.784,418,2.131,423,1.428,439,1.579,442,1.428,446,1.579,451,1.303,455,1.767,460,2.019,467,1.767,468,1.579,480,2.019,496,1.428,506,1.303,510,2.019,512,1.767,518,1.579,519,2.636,522,1.644,526,1.767,549,2.019,552,1.579,560,2.019,566,1.428,591,1.767,601,1.428,626,1.944,634,2.019,639,2.019,642,2.636,648,2.893,667,3.153,675,2.402,676,3.603,677,3.584,678,2.402,679,2.402,680,2.402,681,3.153,682,3.496,683,2.019,684,2.019,685,2.402,686,1.767,687,2.355,688,2.019,689,2.402,690,2.402,691,2.402,692,2.402,693,1.767,694,2.402,695,2.019,696,2.019,697,2.402,698,2.019,699,2.402,700,2.019,701,2.019,702,2.402,703,2.402,704,2.402,705,2.402,706,2.019,707,2.402,708,2.402,709,2.402,710,1.428,711,2.402,712,2.402,713,2.402,714,1.579,715,2.402,716,2.019,717,2.402,718,2.019,719,2.402,720,2.402,721,3.012,722,2.402,723,2.131,724,2.402,725,2.402,726,1.767,727,2.131,728,2.636,729,2.402,730,2.019,731,2.402,732,2.402,733,1.767,734,2.402,735,2.019,736,2.402,737,2.402,738,2.402,739,2.402,740,2.402,741,2.402,742,2.019,743,2.402,744,2.402,745,1.767,746,2.402,747,2.402,748,1.767,749,2.402,750,2.402,751,2.402,752,2.402,753,2.402,754,2.402,755,2.402,756,2.402,757,2.402,758,2.402,759,2.402,760,2.402,761,1.767,762,2.402,763,2.402,764,2.402,765,2.402,766,1.579,767,2.402,768,2.402,769,2.131,770,2.402,771,2.402,772,2.402,773,1.767,774,4.286,775,3.584,776,2.402,777,2.402,778,2.402,779,2.019,780,2.402,781,2.402,782,3.584,783,2.402,784,2.402,785,2.402,786,2.402,787,2.402,788,2.402,789,2.402,790,5.084,791,2.019,792,2.019,793,2.402,794,2.402,795,2.402,796,2.402,797,1.767,798,1.767,799,2.402,800,2.402,801,2.402,802,2.402,803,1.767,804,4.286,805,2.402,806,3.584]],["title/modules.html",[588,2.343]],["body/modules.html",[24,0.026,29,0.026,30,0.026,39,2.622,588,2.622,807,4.427]],["title/overview.html",[808,3.956]],["body/overview.html",[0,0.099,24,0.025,29,0.025,30,0.025,280,1.51,300,2.969,588,2.572,590,2.191,808,4.343,809,3.072,810,5.167]],["title/miscellaneous/typealiases.html",[811,1.976,812,4.216]],["body/miscellaneous/typealiases.html",[18,0.644,24,0.028,26,0.574,29,0.023,30,0.023,33,0.473,50,2.26,83,1.234,371,2.629,382,1.062,532,3.916,582,3.345,583,4.067,766,3.634,811,2.988,813,4.547,814,5.958,815,6.352,816,5.958,817,5.958,818,5.958,819,4.547,820,4.547,821,2.988]],["title/miscellaneous/variables.html",[155,2.099,811,1.976]],["body/miscellaneous/variables.html",[11,2.887,18,0.605,24,0.028,26,0.536,29,0.023,30,0.023,33,0.554,34,1.812,35,1.555,57,1.249,85,1.446,93,2.091,113,2.573,122,1.558,155,2.127,157,1.812,176,2.113,204,0.998,222,2.127,248,2.808,284,1.344,341,2.659,343,1.812,382,0.998,590,2.257,660,3.592,661,4.872,663,4.872,664,4.872,667,4.462,769,2.541,811,2.808,821,2.808,822,5.795,823,5.321,824,5.321,825,5.321,826,5.321,827,4.273,828,4.273,829,4.273,830,4.273,831,3.592]],["title/additional-documentation/quickstart.html",[233,1.275,686,2.212,832,1.497]],["body/additional-documentation/quickstart.html",[0,0.039,9,1.733,10,1.355,11,1.731,15,1.119,24,0.028,26,0.361,28,0.69,29,0.014,30,0.017,33,0.602,34,2.015,35,1.848,36,1.602,39,2.188,40,2.682,41,2.522,43,1.703,44,2.097,45,3.281,46,1.517,47,1.733,49,2.826,50,1.832,54,1.517,55,3.693,56,1.08,57,0.603,58,1.226,60,0.874,61,1.867,62,3.281,66,1.464,67,1.193,69,0.752,80,1.353,81,0.874,82,1.226,83,1.364,87,2.347,88,1.353,91,1.464,93,0.81,97,0.804,113,2.131,115,0.994,116,1.163,117,0.648,119,1.119,122,1.423,128,1.027,129,1.589,133,0.603,137,2.131,139,1.791,157,0.874,163,0.932,167,0.946,171,1.059,176,1.91,177,1.791,178,2.609,180,1.864,183,2.118,194,1.355,196,1.517,197,1.517,199,0.603,204,1.11,209,1.517,212,1.91,213,2.826,215,0.874,225,1.321,234,1.226,243,1.226,244,1.791,254,0.81,262,1.897,267,2.565,269,1.464,275,0.81,276,1.464,283,1.353,298,1.355,299,1.517,318,1.464,319,1.226,331,1.226,335,1.731,338,1.119,339,2.321,341,1.464,348,1.733,354,1.355,355,1.226,363,1.355,374,1.353,382,0.745,405,1.517,409,1.027,410,1.027,422,1.226,429,1.119,432,2.097,435,1.226,441,1.517,443,2.347,452,1.226,453,1.355,455,1.517,493,1.226,496,1.226,498,1.733,504,1.355,521,1.517,566,1.897,581,1.733,588,2.188,590,0.874,593,1.226,596,1.733,601,1.897,613,1.517,616,2.682,619,1.517,626,1.119,643,1.733,648,1.119,683,2.682,684,1.733,687,1.355,695,1.733,700,1.733,714,1.355,716,1.733,723,1.226,727,1.226,728,1.517,761,1.517,769,1.897,797,1.517,803,1.517,807,3.281,809,1.897,821,1.355,833,2.062,834,1.517,835,3.994,836,1.733,837,3.191,838,2.062,839,2.062,840,1.733,841,2.062,842,1.517,843,3.123,844,2.062,845,1.355,846,2.682,847,3.191,848,2.062,849,2.682,850,2.321,851,2.062,852,2.062,853,2.062,854,2.062,855,1.733,856,2.062,857,1.733,858,2.682,859,1.355,860,1.733,861,1.355,862,1.517,863,2.062,864,3.191,865,2.062,866,2.682,867,3.191,868,2.062,869,2.062,870,1.733,871,2.062,872,3.191,873,3.191,874,2.062,875,3.191,876,2.062,877,3.191,878,2.062,879,2.062,880,2.062,881,1.733,882,2.062,883,2.062,884,2.062,885,2.062,886,2.062,887,2.062,888,2.062,889,2.062,890,2.062,891,3.191,892,1.733,893,2.062,894,2.062,895,2.062,896,1.517,897,2.062,898,2.682,899,2.062,900,2.062,901,2.062,902,2.062,903,2.062,904,3.191,905,1.733,906,1.517,907,1.733,908,2.682,909,1.733,910,2.062,911,1.517]],["title/additional-documentation/guide.html",[233,1.275,832,1.497,862,2.212]],["body/additional-documentation/guide.html",[16,1.223,24,0.024,29,0.024,30,0.024,33,0.63,43,1.484,67,1.535,68,1.875,69,2.061,85,1.597,88,2.001,89,2.806,97,1.189,103,2.806,116,2.061,117,1.484,129,2.349,165,2.349,199,1.379,210,2.221,260,3.471,280,1.379,285,2.806,300,2.349,528,2.56,648,2.56,861,3.101,912,3.966,913,4.718,914,4.718,915,4.718]],["title/additional-documentation/guide/1.-creating-connections.html",[68,0.677,210,0.911,233,0.983,300,1.154,832,1.154]],["body/additional-documentation/guide/1.-creating-connections.html",[7,2.005,8,2.488,15,1.529,16,0.871,21,1.293,23,1.027,24,0.029,26,0.435,29,0.017,30,0.017,33,0.565,36,1.027,41,1.195,50,1.027,57,0.823,63,1.403,67,1.391,68,1.792,69,1.713,70,2.156,75,1.977,78,1.293,79,2.073,83,0.765,91,1.293,93,1.107,97,0.71,103,2.794,112,2.073,113,1.708,115,0.918,117,1.266,122,1.977,133,1.177,150,0.823,155,2.005,158,1.403,163,1.177,165,2.7,167,1.847,171,1.664,174,1.529,175,1.529,176,1.027,180,1.195,189,1.675,204,1.197,210,2.333,212,1.027,213,1.675,229,2.962,232,1.107,234,1.675,242,1.195,251,1.675,254,1.107,258,1.107,262,1.675,283,2.174,284,1.266,297,1.403,306,2.073,318,1.293,319,1.675,343,1.708,374,1.195,375,1.107,378,2.073,382,1.197,394,1.529,417,2.962,442,1.675,462,3.385,504,1.852,522,1.293,528,1.529,565,1.852,590,1.195,591,2.073,593,2.394,618,2.368,638,2.073,681,2.073,688,2.368,714,1.852,723,2.394,727,1.675,745,2.073,766,1.852,797,2.073,843,2.646,845,1.852,850,1.675,857,2.368,859,1.852,909,2.368,916,3.771,917,4.026,918,3.771,919,4.026,920,2.817,921,2.368,922,2.962,923,2.368,924,2.817,925,2.817,926,2.817,927,2.817,928,2.817,929,4.026,930,3.385,931,2.817,932,2.817,933,2.817,934,2.817,935,2.368,936,2.073,937,2.817,938,2.817,939,2.817,940,4.026,941,5.126,942,2.368,943,2.817,944,2.817,945,3.385,946,2.817,947,2.817,948,2.817,949,2.368]],["title/additional-documentation/guide/2.-connecting-to-dom.html",[67,0.629,68,0.677,134,1.524,233,0.983,832,1.154]],["body/additional-documentation/guide/2.-connecting-to-dom.html",[16,0.628,21,1.332,24,0.029,25,1.392,27,0.731,29,0.017,30,0.017,33,0.656,35,1.202,36,1.058,57,1.202,67,1.41,68,1.518,70,1.887,78,1.332,80,1.231,81,1.231,82,1.726,83,1.41,88,1.744,93,1.141,97,1.036,101,1.332,115,1.013,116,1.058,117,0.913,137,1.231,150,0.848,153,3.457,166,1.726,170,3.025,176,1.058,177,1.332,178,1.445,180,2.538,184,2.703,185,3.139,189,1.726,195,2.135,199,1.842,200,2.231,203,1.141,204,1.214,206,2.446,210,1.616,212,1.894,213,1.726,219,1.887,225,1.392,232,1.141,242,1.231,243,1.726,244,1.332,256,2.135,258,2.238,259,2.446,269,1.887,273,1.744,280,0.848,281,1.908,284,1.502,289,1.575,290,1.231,307,2.703,319,1.726,323,1.908,335,1.575,340,2.703,358,1.726,359,2.135,360,2.135,362,2.135,374,1.231,375,1.616,382,1.116,394,1.575,395,1.908,418,1.726,436,3.025,442,1.726,446,1.908,454,2.44,482,1.908,500,1.726,504,1.908,506,1.575,518,2.703,528,2.231,565,1.908,602,3.025,693,2.135,710,1.726,726,2.135,835,2.44,842,2.135,892,2.44,912,3.457,918,3.025,950,2.903,951,4.113,952,2.903,953,4.113,954,4.113,955,4.113,956,4.113,957,4.113,958,2.903,959,2.44,960,2.903,961,2.903,962,2.903,963,4.113,964,2.903,965,2.903,966,4.113,967,2.903,968,2.44,969,2.903,970,2.903,971,2.903,972,2.44,973,2.903,974,2.903,975,2.903,976,2.135,977,2.903,978,2.903,979,2.44,980,2.903,981,2.903,982,2.903]],["title/additional-documentation/guide/3.-monitoring-state.html",[97,0.584,116,0.845,233,0.983,809,1.379,832,1.154]],["body/additional-documentation/guide/3.-monitoring-state.html",[0,0.081,7,1.507,16,0.916,21,2.242,24,0.028,26,0.392,28,0.916,29,0.021,30,0.018,33,0.551,36,1.103,48,2.227,50,1.544,56,1.434,61,1.664,66,1.389,68,1.238,69,2.031,80,2.072,81,2.072,83,1.326,88,1.284,91,2.242,97,1.568,104,1.642,113,1.284,115,0.717,116,1.781,117,1.332,119,1.642,127,2.544,133,1.547,137,1.284,139,1.943,142,1.507,144,1.989,150,1.547,154,1.797,155,1.507,158,2.109,160,3.116,162,2.298,163,0.885,166,2.519,167,1.389,171,1.15,177,1.389,188,1.8,200,1.642,212,1.103,215,1.797,216,1.8,222,2.109,224,1.389,230,2.227,232,1.189,254,1.189,261,1.642,262,1.8,264,1.642,269,1.943,273,1.284,274,1.507,275,1.189,285,1.8,297,1.507,302,1.642,330,1.189,331,2.519,341,1.389,343,1.284,344,3.147,374,1.284,376,2.544,382,1.236,402,1.8,410,1.507,413,2.109,420,2.544,438,1.989,451,1.642,453,1.989,475,2.544,500,1.8,516,1.8,522,1.389,542,1.8,575,2.544,593,1.8,626,1.642,682,2.227,710,1.8,727,2.519,761,2.227,798,2.227,840,2.544,845,1.989,850,3.147,916,3.116,959,2.544,976,2.227,983,2.544,984,3.561,985,3.561,986,5.292,987,3.561,988,3.027,989,3.027,990,3.027,991,3.561,992,2.544,993,2.544,994,2.544,995,2.544,996,3.027,997,3.027,998,3.027,999,4.886,1000,3.027,1001,3.027,1002,2.544,1003,2.544,1004,2.544,1005,3.027,1006,4.236,1007,3.027,1008,3.027,1009,2.544,1010,2.544,1011,3.027,1012,3.027,1013,3.027,1014,2.544]],["title/additional-documentation/chess-tutorial.html",[233,1.11,687,1.721,733,1.926,832,1.304]],["body/additional-documentation/chess-tutorial.html",[0,0.027,3,0.317,6,1.006,7,1.18,8,0.364,10,0.521,15,1.798,16,0.42,21,0.654,24,0.029,25,0.268,26,0.18,28,0.812,29,0.013,30,0.006,33,0.469,35,0.232,36,1.11,38,0.521,39,0.395,41,2.042,43,1.116,48,0.583,49,2.609,50,0.708,56,0.268,57,0.416,58,0.471,60,0.336,66,0.364,67,0.387,68,0.232,69,0.519,70,0.654,73,0.583,74,1.744,75,1.208,76,0.521,81,0.336,82,0.847,83,1.391,85,0.482,88,1.006,89,0.471,93,1.613,94,1.198,97,0.359,104,0.43,113,1.006,115,0.889,116,0.708,117,1.042,118,0.521,119,0.43,121,0.666,122,1.644,128,0.395,133,0.416,134,2.795,137,0.336,138,2.441,139,0.891,140,0.583,142,0.709,143,0.521,144,1.797,146,2.001,150,0.968,151,0.666,154,1.912,155,0.395,158,0.966,162,1.652,163,0.232,165,1.18,167,1.088,168,0.666,170,2.24,171,1.391,175,0.43,177,1.723,178,0.395,180,1.006,185,1.276,189,0.847,192,1.198,199,0.416,200,0.773,203,0.56,204,0.711,206,2.11,210,0.931,212,1.684,213,0.471,215,0.604,217,1.397,218,0.583,219,0.654,220,1.558,222,0.395,223,2.898,224,1.088,225,0.268,226,0.583,228,0.666,232,0.763,233,0.336,234,1.41,237,0.666,241,1.428,242,1.405,243,0.847,244,0.364,245,0.666,246,1.744,250,0.666,253,0.773,254,0.311,256,0.583,258,0.311,259,0.847,262,1.154,263,1.048,264,0.43,267,1.797,269,0.891,273,0.604,275,0.311,283,0.604,287,1.797,290,0.604,297,0.709,299,1.428,300,2.044,301,0.666,303,1.048,304,0.471,306,1.744,307,0.936,309,1.198,313,0.666,314,1.048,319,0.847,322,0.709,323,0.936,325,1.632,330,0.56,332,1.276,335,0.773,338,0.773,340,0.521,341,0.891,342,0.666,344,0.471,347,0.521,354,0.521,355,0.471,356,0.583,358,1.97,359,0.583,360,0.583,362,0.583,371,0.823,374,0.336,378,0.583,382,0.877,384,0.471,394,0.43,409,0.709,410,0.395,412,0.666,413,1.767,416,0.666,417,1.744,418,1.97,424,0.583,429,1.483,432,0.521,435,0.471,436,0.583,439,0.521,440,0.666,441,0.583,442,0.471,451,1.286,452,0.471,468,0.936,478,0.666,481,0.666,482,1.558,483,1.198,485,1.048,487,2.298,488,0.666,489,0.666,491,0.666,493,1.626,500,1.154,506,0.43,508,1.048,512,3.77,514,0.666,516,0.471,518,0.521,522,0.891,524,0.583,537,0.583,552,0.521,555,0.666,556,3.542,566,2.609,586,3.79,587,3.883,588,0.709,589,0.583,590,1.505,593,0.471,601,0.847,602,1.048,619,1.048,628,1.632,638,0.583,644,0.666,648,0.773,653,3.575,672,2.785,676,2.298,681,0.583,682,1.744,686,0.583,687,1.558,693,1.744,696,1.198,701,0.666,706,0.666,710,0.847,714,0.521,721,0.666,723,0.847,726,2.011,727,1.626,728,0.583,730,1.198,733,2.61,735,1.632,742,0.666,745,0.583,748,0.583,766,0.521,769,0.471,773,1.428,779,0.666,791,0.666,803,0.583,809,1.154,834,0.583,836,0.666,842,0.583,843,2.001,845,0.521,846,0.666,850,1.626,855,0.666,858,3.157,859,2.178,860,2.298,861,1.558,862,1.048,866,1.632,870,0.666,896,0.583,906,1.048,908,1.198,911,0.583,916,1.048,918,2.011,921,1.198,922,1.744,923,1.993,930,0.666,935,3.312,936,0.583,945,0.666,949,1.632,968,0.666,972,0.666,976,1.048,979,0.666,983,0.666,984,0.666,985,0.666,987,0.666,992,1.198,993,0.666,994,0.666,995,0.666,1002,1.198,1003,0.666,1004,0.666,1010,0.666,1014,0.666,1015,0.792,1016,3.313,1017,5.753,1018,1.425,1019,0.792,1020,4.105,1021,1.425,1022,3.548,1023,4.253,1024,2.371,1025,5.055,1026,3.548,1027,1.941,1028,1.941,1029,0.792,1030,1.632,1031,1.941,1032,0.792,1033,0.792,1034,0.792,1035,0.792,1036,1.941,1037,0.792,1038,0.792,1039,2.371,1040,1.425,1041,0.792,1042,1.425,1043,1.425,1044,3.94,1045,0.792,1046,0.792,1047,1.425,1048,1.941,1049,0.792,1050,0.792,1051,0.792,1052,0.792,1053,0.792,1054,0.792,1055,1.425,1056,0.792,1057,1.941,1058,1.941,1059,1.425,1060,0.792,1061,0.792,1062,1.425,1063,1.425,1064,0.792,1065,0.792,1066,0.792,1067,1.425,1068,1.425,1069,0.792,1070,0.792,1071,0.792,1072,0.792,1073,1.941,1074,2.734,1075,3.044,1076,0.792,1077,0.792,1078,2.371,1079,0.792,1080,0.792,1081,1.425,1082,0.792,1083,0.792,1084,1.425,1085,2.734,1086,0.792,1087,0.792,1088,0.792,1089,1.425,1090,2.734,1091,1.632,1092,0.792,1093,0.792,1094,0.792,1095,0.792,1096,0.792,1097,0.792,1098,1.425,1099,1.425,1100,0.792,1101,0.792,1102,0.792,1103,0.792,1104,0.792,1105,0.792,1106,0.792,1107,0.792,1108,0.792,1109,4.981,1110,0.792,1111,0.792,1112,0.792,1113,1.425,1114,0.792,1115,1.425,1116,0.792,1117,0.792,1118,0.792,1119,0.792,1120,3.044,1121,1.993,1122,0.666,1123,0.792,1124,0.792,1125,3.756,1126,2.734,1127,0.792,1128,0.792,1129,0.792,1130,0.792,1131,0.792,1132,1.425,1133,1.198,1134,0.792,1135,0.792,1136,0.792,1137,0.792,1138,1.425,1139,1.425,1140,0.792,1141,0.792,1142,1.425,1143,0.792,1144,0.792,1145,0.792,1146,0.792,1147,0.792,1148,0.792,1149,0.666,1150,0.792,1151,0.792,1152,1.632,1153,0.792,1154,0.792,1155,1.425,1156,0.792,1157,0.792,1158,1.425,1159,1.425,1160,0.792,1161,1.425,1162,1.941,1163,0.792,1164,1.425,1165,0.792,1166,1.425,1167,0.792,1168,0.792,1169,0.792,1170,0.792,1171,0.792,1172,0.792,1173,1.425,1174,1.425,1175,0.792,1176,1.425,1177,0.792,1178,0.792,1179,0.792,1180,1.425,1181,0.792,1182,1.425,1183,1.425,1184,0.792,1185,0.792,1186,0.792,1187,0.792,1188,0.792,1189,1.425,1190,0.792,1191,0.792,1192,0.792,1193,0.792,1194,0.792,1195,1.993,1196,0.792,1197,1.941,1198,0.792,1199,0.792,1200,1.941,1201,0.792,1202,0.792,1203,0.792,1204,0.792,1205,0.792,1206,1.425,1207,0.792,1208,0.792,1209,1.425,1210,0.666,1211,0.792,1212,0.792,1213,0.792,1214,0.792,1215,0.666,1216,0.792,1217,0.792,1218,0.792,1219,0.792,1220,0.792,1221,0.792,1222,0.792,1223,0.792,1224,0.792,1225,0.792,1226,0.792,1227,0.792,1228,2.734,1229,0.792,1230,0.792,1231,1.425,1232,1.941,1233,1.425,1234,0.792,1235,0.792,1236,0.792,1237,0.792,1238,0.792,1239,0.792,1240,0.792,1241,0.792,1242,0.792,1243,0.792,1244,0.792,1245,0.792,1246,0.792,1247,0.792,1248,0.792,1249,1.425,1250,1.425,1251,0.792,1252,0.792,1253,0.792,1254,0.792,1255,0.792,1256,0.792,1257,0.792,1258,0.792,1259,0.792,1260,0.792,1261,0.792,1262,0.792,1263,0.792,1264,0.792,1265,0.792,1266,0.792,1267,0.792,1268,0.792,1269,2.734,1270,0.792,1271,0.792,1272,0.792,1273,0.792,1274,1.425,1275,0.792,1276,1.941,1277,0.792,1278,0.792,1279,0.792,1280,0.792]],["title/additional-documentation/translating-react-code.html",[137,0.983,139,1.064,233,0.983,304,1.379,832,1.154]],["body/additional-documentation/translating-react-code.html",[0,0.034,8,1.289,16,0.379,17,0.639,21,1.612,24,0.029,26,0.372,28,0.869,29,0.012,30,0.012,33,0.533,38,1.152,41,0.744,43,1.883,49,1.67,50,1.796,56,0.951,57,1.027,58,2.614,60,0.744,61,2.074,66,0.805,67,1.273,68,1.715,69,1.024,74,2.584,75,1.024,76,1.152,80,1.864,85,0.594,88,0.744,89,1.043,91,2.017,93,0.689,97,1.33,101,0.805,102,1.474,103,1.043,104,1.524,113,2.389,115,0.794,116,1.024,117,1.105,122,1.866,123,1.474,125,1.29,126,1.152,129,1.398,133,1.285,134,1.152,137,2.581,138,1.043,139,2.017,140,3.234,142,2,143,1.846,150,0.512,154,1.864,157,1.49,158,1.749,159,1.474,160,1.29,162,1.524,163,0.512,165,0.873,167,0.805,171,1.639,175,0.951,176,0.639,177,0.805,182,1.29,194,1.152,197,1.29,198,1.474,199,0.821,203,0.689,204,0.656,210,1.578,212,1.602,219,1.289,220,1.846,222,0.873,224,0.805,225,0.594,232,0.689,242,1.989,248,2.64,253,0.951,254,1.104,259,1.043,261,0.951,264,0.951,267,1.152,268,1.29,269,2.349,273,0.744,276,0.805,280,1.174,283,0.744,284,0.883,285,1.67,290,1.49,298,1.152,300,0.873,304,2.389,318,1.843,322,0.873,332,1.152,335,1.524,338,0.951,341,0.805,344,2.089,346,1.474,349,1.474,350,2.953,352,1.29,355,1.043,358,1.043,371,1.191,372,1.152,377,1.29,379,1.474,391,1.474,394,1.524,413,1.398,421,1.474,422,1.67,429,0.951,438,1.152,439,1.846,443,1.29,451,2.179,452,1.043,468,1.152,482,1.152,485,2.066,506,2.385,508,1.29,522,1.289,528,0.951,537,1.29,552,1.152,556,2.066,566,2.089,589,1.29,590,1.49,609,1.474,612,2.953,613,1.29,626,1.524,648,0.951,698,2.361,710,1.043,718,1.474,723,2.089,748,1.29,769,2.089,773,1.29,792,1.474,798,1.29,809,1.043,821,1.152,831,1.474,834,1.29,843,3.082,849,1.474,850,1.67,859,1.152,861,2.309,881,1.474,896,1.29,898,2.361,905,2.361,906,1.29,907,1.474,911,1.29,922,1.29,936,2.066,942,1.474,991,1.474,1009,1.474,1030,1.474,1091,2.361,1121,1.474,1122,1.474,1133,2.361,1149,1.474,1152,2.361,1195,1.474,1210,1.474,1215,1.474,1281,1.753,1282,1.753,1283,1.753,1284,1.753,1285,1.753,1286,1.753,1287,1.753,1288,1.753,1289,1.753,1290,1.753,1291,2.808,1292,5.722,1293,4.69,1294,1.753,1295,1.753,1296,1.753,1297,2.808,1298,2.808,1299,1.753,1300,1.753,1301,1.753,1302,1.753,1303,1.753,1304,1.753,1305,1.753,1306,1.753,1307,1.753,1308,1.753,1309,1.753,1310,1.753,1311,2.808,1312,2.808,1313,1.753,1314,3.513,1315,2.808,1316,1.753,1317,1.753,1318,1.753,1319,1.753,1320,1.753,1321,1.753,1322,2.808,1323,1.753,1324,1.753,1325,1.753,1326,1.753,1327,1.753,1328,1.753,1329,1.753,1330,1.753,1331,1.753,1332,1.753,1333,1.753,1334,1.753,1335,1.753,1336,1.753,1337,1.753,1338,1.753,1339,1.753,1340,1.753,1341,1.753,1342,1.753,1343,1.753,1344,1.753,1345,1.753,1346,1.753,1347,2.808,1348,1.753,1349,1.753,1350,1.753,1351,1.753,1352,1.753]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["0",{"_index":299,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0..63",{"_index":1112,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.25",{"_index":1218,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.5",{"_index":301,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0.8.26",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["09",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":300,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"injectables/SkyhookDndService.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["1.0.10",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":653,"title":{},"body":{"coverage.html":{},"additional-documentation/chess-tutorial.html":{}}}],["11",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["12.5",{"_index":1099,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["16",{"_index":810,"title":{},"body":{"overview.html":{}}}],["1px",{"_index":1095,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["2",{"_index":134,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["2/2",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["2d",{"_index":752,"title":{},"body":{"index.html":{}}}],["3",{"_index":809,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["3/3",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1195,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["4/4",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1041,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5",{"_index":1121,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["5.5",{"_index":1258,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5/5",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["50f7dc9",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["54px",{"_index":1042,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["560px",{"_index":1103,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["6",{"_index":1341,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["6.0.0",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1027,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["700",{"_index":1205,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["70px",{"_index":1045,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["8",{"_index":1115,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["8/8",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["874723a",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["8x8",{"_index":1089,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["abov",{"_index":58,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["abramov",{"_index":679,"title":{},"body":{"index.html":{}}}],["absolut",{"_index":1084,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["abstract",{"_index":722,"title":{},"body":{"index.html":{}}}],["accept",{"_index":856,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["access",{"_index":1009,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["accessor",{"_index":535,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["accomplish",{"_index":1315,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["achiev",{"_index":1064,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["action",{"_index":447,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["actual",{"_index":748,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["ad",{"_index":834,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["add",{"_index":15,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["add(teardown",{"_index":71,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["add(teardownlog",{"_index":19,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["addit",{"_index":832,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}},"body":{}}],["addsubscript",{"_index":1,"title":{"interfaces/AddSubscription.html":{}},"body":{"interfaces/AddSubscription.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{}}}],["advanc",{"_index":909,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["advantag",{"_index":712,"title":{},"body":{"index.html":{}}}],["advic",{"_index":235,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["affect",{"_index":1060,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["again",{"_index":840,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["alias",{"_index":813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1076,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["allow",{"_index":283,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["alreadi",{"_index":322,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["alt",{"_index":474,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["altern",{"_index":761,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["alway",{"_index":976,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ambiti",{"_index":731,"title":{},"body":{"index.html":{}}}],["amend",{"_index":1161,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anchori",{"_index":293,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["anchorx",{"_index":292,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["angular",{"_index":43,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["angular'",{"_index":1061,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["angular/cor",{"_index":672,"title":{},"body":{"dependencies.html":{},"additional-documentation/chess-tutorial.html":{}}}],["anoth",{"_index":518,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["answer",{"_index":1191,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anyth",{"_index":256,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["anyway",{"_index":523,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["aot",{"_index":55,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["api",{"_index":698,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["app",{"_index":860,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["app.module.t",{"_index":887,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["appear",{"_index":524,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["appearance—even",{"_index":513,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["appli",{"_index":323,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["appmodul",{"_index":839,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["approach",{"_index":1319,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["appropri",{"_index":613,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["arbitrari",{"_index":1349,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["arbitrarili",{"_index":1070,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["area",{"_index":740,"title":{},"body":{"index.html":{}}}],["aren't",{"_index":787,"title":{},"body":{"index.html":{}}}],["argument",{"_index":612,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["around",{"_index":170,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array",{"_index":766,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array(64).fill(0).map((_",{"_index":1088,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["arrow",{"_index":898,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["ask",{"_index":265,"title":{},"body":{"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{}}}],["assembl",{"_index":872,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["assign",{"_index":467,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{}}}],["associ",{"_index":1339,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["assum",{"_index":1028,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["assumpt",{"_index":1223,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["async",{"_index":984,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["asynchron",{"_index":1347,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["attach",{"_index":918,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["attent",{"_index":1080,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["automat",{"_index":257,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["avail",{"_index":215,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["avoid",{"_index":490,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["awar",{"_index":1324,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["backend",{"_index":35,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["backend';gener",{"_index":884,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["backendfactori",{"_index":46,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["backendfactoryinput",{"_index":31,"title":{"interfaces/BackendFactoryInput.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"coverage.html":{}}}],["backendinput",{"_index":59,"title":{"interfaces/BackendInput.html":{}},"body":{"interfaces/BackendInput.html":{},"coverage.html":{}}}],["backendnext",{"_index":685,"title":{},"body":{"index.html":{}}}],["backendy",{"_index":833,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["background",{"_index":987,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["backgroundcolor",{"_index":1057,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bare",{"_index":762,"title":{},"body":{"index.html":{}}}],["base",{"_index":66,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["base.t",{"_index":564,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["basic",{"_index":1030,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["batch",{"_index":708,"title":{},"body":{"index.html":{}}}],["bbb",{"_index":1151,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["be",{"_index":219,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["becom",{"_index":190,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{}}}],["befor",{"_index":38,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["begindrag",{"_index":394,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["begindrag(monitor",{"_index":479,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["behaviorsubject",{"_index":1126,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["behaviour",{"_index":528,"title":{},"body":{"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["behavioursubject",{"_index":1134,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["belong",{"_index":793,"title":{},"body":{"index.html":{}}}],["below",{"_index":961,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["benefit",{"_index":800,"title":{},"body":{"index.html":{}}}],["best",{"_index":459,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["better",{"_index":1142,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["between",{"_index":298,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["beyond",{"_index":931,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["bg",{"_index":1269,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["big",{"_index":1072,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["biggest",{"_index":1310,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["bind",{"_index":399,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["bit",{"_index":1189,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["black",{"_index":1023,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["blindli",{"_index":411,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["block",{"_index":726,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["board",{"_index":512,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["boardcompon",{"_index":1026,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boardsquarecompon",{"_index":1228,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bodi",{"_index":1053,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boilerpl",{"_index":1130,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bone",{"_index":763,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":279,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["boolean;then",{"_index":1054,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["border",{"_index":1094,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["born",{"_index":782,"title":{},"body":{"index.html":{}}}],["both",{"_index":452,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["bottom",{"_index":315,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["bound",{"_index":153,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["box",{"_index":966,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["break",{"_index":1018,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["brevity'",{"_index":1101,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broadcast",{"_index":1131,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broken",{"_index":401,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["brows",{"_index":807,"title":{},"body":{"modules.html":{},"additional-documentation/quickstart.html":{}}}],["browser",{"_index":441,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["bug",{"_index":634,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["build",{"_index":676,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["builder",{"_index":756,"title":{},"body":{"index.html":{}}}],["c.candrop",{"_index":1265,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["c.isdrag",{"_index":156,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["c.isov",{"_index":1264,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cad",{"_index":753,"title":{},"body":{"index.html":{}}}],["call",{"_index":163,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["callback",{"_index":80,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["came",{"_index":1222,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["can't",{"_index":896,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["candrag",{"_index":405,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["candrag(monitor",{"_index":495,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["candrop",{"_index":146,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["candrop(monitor",{"_index":553,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["canmoveknight",{"_index":1162,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["canmoveknight(to",{"_index":1168,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["capturedraggingst",{"_index":294,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{}}}],["card",{"_index":510,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["carri",{"_index":1010,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["case",{"_index":148,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["cat",{"_index":986,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["center",{"_index":1077,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["certain",{"_index":181,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["chain",{"_index":426,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["chang",{"_index":117,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["changelog",{"_index":623,"title":{"changelog.html":{}},"body":{}}],["charact",{"_index":1038,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["check",{"_index":128,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["chess",{"_index":733,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["chessboard",{"_index":1107,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["child",{"_index":432,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["choos",{"_index":164,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["circumst",{"_index":458,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["class",{"_index":566,"title":{},"body":{"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["clean",{"_index":600,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["clearer",{"_index":1154,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["clearli",{"_index":1119,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["click",{"_index":866,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["client",{"_index":266,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["code",{"_index":139,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["codebas",{"_index":794,"title":{},"body":{"index.html":{}}}],["coll",{"_index":1268,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["collect",{"_index":140,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["collect((prop",{"_index":1328,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["color",{"_index":1058,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["colour",{"_index":1048,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["column",{"_index":1097,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["combin",{"_index":991,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["come",{"_index":1327,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["commenc",{"_index":851,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["commit",{"_index":628,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["common",{"_index":565,"title":{},"body":{"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["commun",{"_index":799,"title":{},"body":{"index.html":{}}}],["compar",{"_index":1287,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["compat",{"_index":11,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["complet",{"_index":911,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["complex",{"_index":677,"title":{},"body":{"index.html":{}}}],["compon",{"_index":171,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["component'",{"_index":377,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["component.fireaction(monitor.getitem",{"_index":1295,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["compos",{"_index":1316,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["comprehens",{"_index":716,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["comput",{"_index":1183,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concept",{"_index":849,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["conceptu",{"_index":1213,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concern",{"_index":1071,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["configur",{"_index":37,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"index.html":{}}}],["confus",{"_index":537,"title":{},"body":{"directives/DropTargetDirective.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["connect",{"_index":68,"title":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["connect.connectdragsourc",{"_index":1297,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview",{"_index":349,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview(elementornod",{"_index":353,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdragsourc",{"_index":350,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragsource(elementornod",{"_index":366,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdroptarget",{"_index":529,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connectdroptarget(elementornod",{"_index":530,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connection'",{"_index":913,"title":{},"body":{"additional-documentation/guide.html":{}}}],["connection.unsubscrib",{"_index":592,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["connectionbas",{"_index":63,"title":{"interfaces/ConnectionBase.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["connectionbase.unsubscrib",{"_index":1321,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connector",{"_index":1340,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["consid",{"_index":504,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["console.log('drop",{"_index":959,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["const",{"_index":358,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["constant",{"_index":1197,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constants.t",{"_index":1199,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constructor",{"_index":602,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["constructor(priv",{"_index":922,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["consum",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contain",{"_index":14,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["containercompon",{"_index":1104,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["content",{"_index":420,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["contributor",{"_index":795,"title":{},"body":{"index.html":{}}}],["conveni",{"_index":79,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["convent",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["convert",{"_index":1111,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cooki",{"_index":771,"title":{},"body":{"index.html":{}}}],["cool",{"_index":1092,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord",{"_index":1109,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord.t",{"_index":1110,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coordin",{"_index":263,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["copi",{"_index":438,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["core",{"_index":667,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["core'",{"_index":114,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["cormacrelf",{"_index":783,"title":{},"body":{"index.html":{}}}],["corollari",{"_index":610,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["correctli",{"_index":885,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["correspond",{"_index":444,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["coupl",{"_index":492,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["cours",{"_index":1284,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["coverag",{"_index":650,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":210,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["createbackend",{"_index":873,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["createdefaultmultibackend",{"_index":42,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["createtouchbackend",{"_index":51,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["css",{"_index":693,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["current",{"_index":222,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["currentposit",{"_index":1164,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cursor",{"_index":340,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["custom",{"_index":189,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["customis",{"_index":436,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["cutter",{"_index":772,"title":{},"body":{"index.html":{}}}],["d14b101",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["dan",{"_index":678,"title":{},"body":{"index.html":{}}}],["data",{"_index":201,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{}}}],["data:image/png;base64",{"_index":1275,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dead",{"_index":1201,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["deadlin",{"_index":776,"title":{},"body":{"index.html":{}}}],["decis",{"_index":1008,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["declar",{"_index":589,"title":{},"body":{"modules/SkyhookDndModule.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["decor",{"_index":1314,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decreas",{"_index":324,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["deep",{"_index":1066,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["default",{"_index":176,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["defer",{"_index":1351,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["defin",{"_index":409,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["definit",{"_index":886,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["degrad",{"_index":527,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["delet",{"_index":736,"title":{},"body":{"index.html":{}}}],["demo",{"_index":906,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["demonstr",{"_index":759,"title":{},"body":{"index.html":{}}}],["depend",{"_index":224,"title":{"dependencies.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["deriv",{"_index":998,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["describ",{"_index":481,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["descript",{"_index":5,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"injectables/SkyhookDndService.html":{}}}],["design",{"_index":209,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["desir",{"_index":328,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["desktop",{"_index":867,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["destroy",{"_index":103,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["destroy.unsubscrib",{"_index":599,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["destruct",{"_index":448,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["detail",{"_index":502,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["detect",{"_index":519,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["determin",{"_index":497,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["devic",{"_index":865,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["diagram",{"_index":749,"title":{},"body":{"index.html":{}}}],["diddrop",{"_index":406,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["differ",{"_index":269,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["difficult",{"_index":1241,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["direct",{"_index":280,"title":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["directli",{"_index":355,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["directori",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["disappear",{"_index":1192,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["discov",{"_index":978,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["discuss",{"_index":552,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dispatch",{"_index":427,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["displac",{"_index":577,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["display",{"_index":246,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dist",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["distinctuntilchang",{"_index":127,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["div",{"_index":1074,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dnd",{"_index":113,"title":{},"body":{"interfaces/ConnectionBase.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dnd'",{"_index":611,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["dnd.dragsource(\"item",{"_index":1303,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dndservice.droptarget(typ",{"_index":96,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["do",{"_index":491,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["doc",{"_index":268,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["dock",{"_index":308,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["document",{"_index":626,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["doesn't",{"_index":338,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dom",{"_index":67,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["don't",{"_index":167,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["done",{"_index":936,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["down",{"_index":745,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["drag",{"_index":115,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["drag/drop",{"_index":729,"title":{},"body":{"index.html":{}}}],["drag/listen",{"_index":614,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["drag_drop_backend",{"_index":661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_manag",{"_index":663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dragdropmanag",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["draggabl",{"_index":259,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["draglay",{"_index":174,"title":{"interfaces/DragLayer.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["draglayer(subscript",{"_index":608,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["draglayer.listen",{"_index":214,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["draglayermonitor",{"_index":216,"title":{"interfaces/DragLayerMonitor.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragpreview",{"_index":288,"title":{},"body":{"directives/DragPreviewDirective.html":{}}}],["dragpreview]=\"sourc",{"_index":963,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewdirect",{"_index":281,"title":{"directives/DragPreviewDirective.html":{}},"body":{"directives/DragPreviewDirective.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewopt",{"_index":289,"title":{"interfaces/DragPreviewOptions.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourc",{"_index":284,"title":{"interfaces/DragSource.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource'",{"_index":404,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["dragsource(\"item",{"_index":1296,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource(typ",{"_index":609,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.connectdragpreview",{"_index":982,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsource.listen",{"_index":1215,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.settyp",{"_index":1352,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"itemsourc",{"_index":1338,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"sourc",{"_index":974,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcedecor",{"_index":814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dragsourcedirect",{"_index":395,"title":{"directives/DragSourceDirective.html":{}},"body":{"directives/DragSourceDirective.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcefactori",{"_index":816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dragsourcemonitor",{"_index":402,"title":{"interfaces/DragSourceMonitor.html":{}},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragsourcemonitor.id",{"_index":505,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dragsourcemonitor.isdrag",{"_index":1216,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dragsourceopt",{"_index":367,"title":{"interfaces/DragSourceOptions.html":{}},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["dragsourcespec",{"_index":375,"title":{"interfaces/DragSourceSpec.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcespec.begindrag",{"_index":247,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["dragsourcetyp",{"_index":396,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["dragula",{"_index":775,"title":{},"body":{"index.html":{}}}],["draw",{"_index":751,"title":{},"body":{"index.html":{}}}],["drill",{"_index":744,"title":{},"body":{"index.html":{}}}],["drive",{"_index":1123,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["drop",{"_index":83,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["drop(monitor",{"_index":554,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["dropeffect",{"_index":437,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{}}}],["dropresult",{"_index":433,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["droptarget",{"_index":343,"title":{"interfaces/DropTarget.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptarget'",{"_index":544,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["droptarget(typ",{"_index":622,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["droptarget.listen",{"_index":1254,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetdecor",{"_index":817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["droptargetdirect",{"_index":533,"title":{"directives/DropTargetDirective.html":{}},"body":{"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["droptargetfactori",{"_index":818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["droptargetmonitor",{"_index":542,"title":{"interfaces/DropTargetMonitor.html":{}},"body":{"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptargetmonitor.candrop",{"_index":1255,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetmonitor.isov",{"_index":1256,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec",{"_index":78,"title":{"interfaces/DropTargetSpec.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["droptargetspec.candrop",{"_index":993,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec.drop",{"_index":1014,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargettyp",{"_index":534,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["dt",{"_index":95,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dt.add(subj.pip",{"_index":105,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dumb",{"_index":239,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["duplic",{"_index":231,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["durat",{"_index":86,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dure",{"_index":466,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dx",{"_index":1169,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dy",{"_index":1171,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dynam",{"_index":372,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["e.g",{"_index":969,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["each",{"_index":850,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["earlier",{"_index":1253,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["easi",{"_index":591,"title":{},"body":{"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["easier",{"_index":390,"title":{},"body":{"interfaces/DragSource.html":{}}}],["easili",{"_index":356,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/chess-tutorial.html":{}}}],["editor",{"_index":910,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["eee",{"_index":988,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["effect",{"_index":236,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["effici",{"_index":1329,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["element",{"_index":199,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["element'",{"_index":950,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["elementornod",{"_index":364,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["elementref",{"_index":1337,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["elementref.nativeel",{"_index":357,"title":{},"body":{"interfaces/DragSource.html":{}}}],["elsewher",{"_index":1122,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["emit",{"_index":855,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["empti",{"_index":337,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["emul",{"_index":136,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["enabl",{"_index":877,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["enabled/dis",{"_index":414,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["enablemouseev",{"_index":52,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["encapsul",{"_index":1063,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["encount",{"_index":890,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["end",{"_index":207,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{}}}],["enddrag",{"_index":422,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["enddrag(monitor",{"_index":499,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["enough",{"_index":1068,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["enter",{"_index":707,"title":{},"body":{"index.html":{}}}],["entir",{"_index":1002,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["equal",{"_index":130,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["erasedto",{"_index":208,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ergonom",{"_index":720,"title":{},"body":{"index.html":{}}}],["error",{"_index":889,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["es6",{"_index":1345,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["especi",{"_index":946,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["essenti",{"_index":120,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["etc",{"_index":1334,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["etcthen",{"_index":955,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["even",{"_index":253,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["event",{"_index":244,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["everyth",{"_index":942,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["exactli",{"_index":1004,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["exampl",{"_index":61,"title":{},"body":{"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["except",{"_index":1193,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["execut",{"_index":1176,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["exist",{"_index":173,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["exit",{"_index":84,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["expect",{"_index":464,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["experi",{"_index":526,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["explicitli",{"_index":430,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["export",{"_index":49,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"modules/SkyhookDndModule.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["express",{"_index":992,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["extend",{"_index":17,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["extra",{"_index":468,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["fact",{"_index":781,"title":{},"body":{"index.html":{}}}],["fairli",{"_index":1283,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fals",{"_index":53,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["familiar",{"_index":1029,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["famou",{"_index":746,"title":{},"body":{"index.html":{}}}],["fanci",{"_index":1145,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["far",{"_index":1333,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["faster",{"_index":777,"title":{},"body":{"index.html":{}}}],["featur",{"_index":442,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["few",{"_index":742,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["figur",{"_index":1246,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["file",{"_index":3,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["find",{"_index":779,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["finish",{"_index":1032,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["fire",{"_index":166,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["fireact",{"_index":1300,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fireaction(item",{"_index":1306,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["first",{"_index":921,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["fit",{"_index":699,"title":{},"body":{"index.html":{}}}],["five",{"_index":1318,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fix",{"_index":226,"title":{},"body":{"interfaces/DragLayer.html":{},"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["flag",{"_index":415,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["fli",{"_index":387,"title":{},"body":{"interfaces/DragSource.html":{}}}],["flight",{"_index":701,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["float",{"_index":1196,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["flow",{"_index":202,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{}}}],["folder",{"_index":639,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["follow",{"_index":88,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["font",{"_index":1039,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["foreground",{"_index":1049,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["forget",{"_index":596,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{}}}],["form",{"_index":962,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["forroot",{"_index":838,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["forrootto",{"_index":844,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["found",{"_index":792,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["four",{"_index":1031,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["free",{"_index":1330,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["frequent",{"_index":562,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["fresh",{"_index":1118,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["friendli",{"_index":700,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["full",{"_index":711,"title":{},"body":{"index.html":{}}}],["function",{"_index":50,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["funki",{"_index":1279,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["game",{"_index":1016,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservic",{"_index":1125,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.canmoveknight",{"_index":1184,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.moveknight",{"_index":1155,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gener",{"_index":260,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide.html":{}}}],["get",{"_index":516,"title":{"changelog.html":{},"index.html":{}},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["getclientoffset",{"_index":567,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getdifferencefrominitialoffset",{"_index":568,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getdropresult",{"_index":407,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["gethandlerid",{"_index":351,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["getinitialclientoffset",{"_index":569,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getinitialsourceclientoffset",{"_index":570,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getitem",{"_index":571,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getitemtyp",{"_index":572,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getsourceclientoffset",{"_index":573,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getstyl",{"_index":1055,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gif",{"_index":760,"title":{},"body":{"index.html":{}}}],["github",{"_index":803,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["give",{"_index":1149,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["given",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glanc",{"_index":1212,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["global",{"_index":197,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["gme",{"_index":1239,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["go",{"_index":556,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["goal",{"_index":703,"title":{},"body":{"index.html":{}}}],["good",{"_index":493,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["grab",{"_index":977,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["graphic",{"_index":755,"title":{},"body":{"index.html":{}}}],["green",{"_index":1250,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["greenplu",{"_index":477,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["grid",{"_index":1090,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["group",{"_index":152,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{}}}],["guid",{"_index":862,"title":{"additional-documentation/guide.html":{}},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["guidanc",{"_index":1240,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["guidelin",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["habit",{"_index":605,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["handl",{"_index":258,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["handler",{"_index":1181,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["handlesquareclick",{"_index":1175,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["handlesquareclick(po",{"_index":1158,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hang",{"_index":169,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["happen",{"_index":730,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["happili",{"_index":135,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["hard",{"_index":489,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["have",{"_index":595,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["head",{"_index":879,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["heavi",{"_index":1234,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["height",{"_index":1044,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["help",{"_index":798,"title":{},"body":{"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["here",{"_index":522,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["here'",{"_index":1152,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["hide",{"_index":334,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["high",{"_index":704,"title":{},"body":{"index.html":{}}}],["higher",{"_index":1311,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["highlight",{"_index":1013,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hinder",{"_index":1001,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hint",{"_index":445,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["hoist",{"_index":615,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["hold",{"_index":1108,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hook",{"_index":619,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["horizont",{"_index":305,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["hors",{"_index":1280,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["host",{"_index":1073,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hover",{"_index":81,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["hover(monitor",{"_index":561,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["html",{"_index":1052,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["html5",{"_index":178,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["html5backend",{"_index":62,"title":{},"body":{"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["html5dropresult",{"_index":470,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["http",{"_index":1277,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["i.",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":478,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["id",{"_index":251,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["idea",{"_index":494,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ident",{"_index":1252,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["identifi",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":333,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["ie11",{"_index":400,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["illeg",{"_index":1179,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["illustr",{"_index":1286,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["imag",{"_index":185,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["imagin",{"_index":1343,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["imaginari",{"_index":883,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["img",{"_index":359,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.onload",{"_index":360,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.src",{"_index":362,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["immedi",{"_index":317,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{}}}],["implement",{"_index":727,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["import",{"_index":41,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["improv",{"_index":802,"title":{},"body":{"index.html":{}}}],["includ",{"_index":262,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["incorpor",{"_index":1233,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["independ",{"_index":1105,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":1113,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["infer",{"_index":457,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{}}}],["inform",{"_index":344,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["initi",{"_index":435,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["inject",{"_index":590,"title":{"injectables/SkyhookDndService.html":{}},"body":{"injectables/SkyhookDndService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["injectiontoken",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inlin",{"_index":702,"title":{},"body":{"index.html":{}}}],["input",{"_index":242,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["insid",{"_index":273,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["inspir",{"_index":852,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["instal",{"_index":683,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["instanc",{"_index":845,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["instead",{"_index":318,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["instruct",{"_index":893,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["interact",{"_index":243,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["interest",{"_index":1133,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{}},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["intern",{"_index":76,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["interpol",{"_index":310,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["introduc",{"_index":1143,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["investig",{"_index":956,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["isblack",{"_index":1117,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["isdrag",{"_index":142,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["isdragging(monitor",{"_index":503,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["isdraggingobj",{"_index":1007,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["isdraggingplain",{"_index":1005,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["ish.t",{"_index":583,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["isn't",{"_index":412,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isov",{"_index":144,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isover(opt",{"_index":545,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["issu",{"_index":790,"title":{},"body":{"index.html":{}}}],["it'",{"_index":482,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["item",{"_index":225,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["item'",{"_index":578,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["itemsourc",{"_index":1302,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemsourcespec",{"_index":1291,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemtyp",{"_index":1200,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itemtypes.knight",{"_index":1202,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itself",{"_index":48,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["javascript",{"_index":480,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["job",{"_index":964,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["jone",{"_index":953,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["js",{"_index":453,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["jsx",{"_index":1335,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["kanban",{"_index":511,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["keep",{"_index":416,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["key",{"_index":475,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["kind",{"_index":871,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["knight",{"_index":1017,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knight'",{"_index":1132,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightcompon",{"_index":1020,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposit",{"_index":1120,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposition$|async",{"_index":1147,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightsourc",{"_index":1206,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["know",{"_index":485,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["kp",{"_index":1167,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["laid",{"_index":997,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["larg",{"_index":714,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["last",{"_index":424,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lastli",{"_index":1273,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["later",{"_index":508,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["layer",{"_index":195,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["lazi",{"_index":841,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["leak",{"_index":606,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["learn",{"_index":316,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["learnabl",{"_index":1243,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["leav",{"_index":168,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["left",{"_index":309,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["let",{"_index":193,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["let'",{"_index":1085,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["level",{"_index":725,"title":{},"body":{"index.html":{}}}],["librari",{"_index":769,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["licens",{"_index":804,"title":{},"body":{"index.html":{}}}],["lifecycl",{"_index":618,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["lifetim",{"_index":621,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["lift",{"_index":1235,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lightgoldenrodyellow",{"_index":989,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["lightweight",{"_index":1128,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["limit",{"_index":182,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["limitedsupplyofpap",{"_index":900,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["line",{"_index":1043,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["linearli",{"_index":311,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["liner",{"_index":903,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["link",{"_index":439,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["list",{"_index":347,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["listen",{"_index":69,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen()/subscrib",{"_index":77,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["listen(m",{"_index":159,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen(mapto",{"_index":108,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["liter",{"_index":546,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["littl",{"_index":1209,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["live",{"_index":696,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["load",{"_index":842,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["log",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":417,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["long",{"_index":1274,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["longer",{"_index":172,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["look",{"_index":859,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["loop",{"_index":1086,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lot",{"_index":593,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lower",{"_index":724,"title":{},"body":{"index.html":{}}}],["luna",{"_index":758,"title":{},"body":{"index.html":{}}}],["m.candrop",{"_index":1261,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["m.candrop());what",{"_index":996,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["m.isdrag",{"_index":160,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["m.isov",{"_index":995,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["maco",{"_index":738,"title":{},"body":{"index.html":{}}}],["made",{"_index":363,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["maintain",{"_index":112,"title":{},"body":{"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["make",{"_index":212,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["manag",{"_index":1320,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mandat",{"_index":1285,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mani",{"_index":175,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["manual",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["map",{"_index":1259,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["mapto",{"_index":161,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["marker",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":30,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["math.abs(di",{"_index":1174,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.abs(dx",{"_index":1173,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.floor(i",{"_index":1116,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["maxim",{"_index":719,"title":{},"body":{"index.html":{}}}],["mayb",{"_index":597,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["mcfli",{"_index":954,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["mean",{"_index":307,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["merg",{"_index":741,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":286,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["method",{"_index":16,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["midflight",{"_index":186,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["minim",{"_index":484,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["miscellan",{"_index":811,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":806,"title":{},"body":{"index.html":{}}}],["mobil",{"_index":864,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mode",{"_index":848,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["model",{"_index":380,"title":{},"body":{"interfaces/DragSource.html":{}}}],["modern",{"_index":1093,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["modifi",{"_index":501,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["modul",{"_index":588,"title":{"modules/SkyhookDndModule.html":{},"modules.html":{}},"body":{"modules/SkyhookDndModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["module'",{"_index":1046,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moment",{"_index":1182,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["monitor",{"_index":97,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.candrop",{"_index":147,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.diddrop",{"_index":905,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.getdropresult",{"_index":465,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["monitor.getitem",{"_index":454,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["monitor.isdrag",{"_index":143,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.isov",{"_index":145,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.t",{"_index":272,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["monitorbas",{"_index":274,"title":{"interfaces/MonitorBase.html":{}},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["moot",{"_index":1323,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["more",{"_index":254,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["mount",{"_index":517,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mous",{"_index":200,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["movabl",{"_index":734,"title":{},"body":{"index.html":{}}}],["move",{"_index":206,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["moveknight",{"_index":1187,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moveknight(to",{"_index":1138,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["much",{"_index":1153,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["multi",{"_index":9,"title":{},"body":{"interfaces/AddSubscription.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend",{"_index":40,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend(html5totouch",{"_index":874,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["multipl",{"_index":1317,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mutabl",{"_index":765,"title":{},"body":{"index.html":{}}}],["mutat",{"_index":692,"title":{},"body":{"index.html":{}}}],["mybackend",{"_index":888,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mycompon",{"_index":1298,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mydraggeditemtyp",{"_index":461,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mydropresult",{"_index":471,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["name",{"_index":25,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["neat",{"_index":934,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["necessari",{"_index":191,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{}}}],["necessarili",{"_index":767,"title":{},"body":{"index.html":{}}}],["need",{"_index":36,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["nest",{"_index":428,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["never",{"_index":1003,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["new",{"_index":93,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["next",{"_index":319,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ng",{"_index":1065,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ng2",{"_index":774,"title":{},"body":{"index.html":{}}}],["ngfor",{"_index":949,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif",{"_index":151,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif=\"aaa",{"_index":1150,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngmodul",{"_index":837,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["ngonchang",{"_index":379,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["ngondestroy",{"_index":165,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["ngoninit",{"_index":378,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngrx",{"_index":1129,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngrx/store",{"_index":560,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["ngstyle",{"_index":1059,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngswitch",{"_index":227,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ngzone.run",{"_index":525,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["nobl",{"_index":1160,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["node",{"_index":183,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["nohtml5preview",{"_index":397,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["non",{"_index":538,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["none",{"_index":440,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notabl",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["notat",{"_index":1325,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["note",{"_index":410,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["noth",{"_index":555,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notic",{"_index":870,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notifi",{"_index":118,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["now",{"_index":220,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["null",{"_index":157,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["number",{"_index":297,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["o",{"_index":111,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["object",{"_index":133,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observ",{"_index":162,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observable.combinelatest",{"_index":1331,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["observable.map",{"_index":121,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["obviou",{"_index":1242,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["occur",{"_index":321,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offer",{"_index":857,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["offset",{"_index":302,"title":{"interfaces/Offset.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["offseti",{"_index":296,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offsetx",{"_index":295,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["on",{"_index":122,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["onc",{"_index":374,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["onload",{"_index":980,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["onpush",{"_index":713,"title":{},"body":{"index.html":{}}}],["opac",{"_index":325,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["oper",{"_index":276,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["oppos",{"_index":550,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["optim",{"_index":124,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["optimis",{"_index":999,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["option",{"_index":27,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["optionsher",{"_index":895,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["order",{"_index":1312,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["origin",{"_index":335,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["other",{"_index":680,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":278,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["out",{"_index":682,"title":{},"body":{"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["output",{"_index":125,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["outsid",{"_index":423,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["over",{"_index":232,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["overal",{"_index":975,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["overlay",{"_index":1257,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["overlaystyl",{"_index":1266,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["overrid",{"_index":431,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{}}}],["overview",{"_index":808,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":434,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["owner'",{"_index":408,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["packag",{"_index":642,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":233,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["papercount",{"_index":899,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["paramet",{"_index":23,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["parent",{"_index":384,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["parentid",{"_index":381,"title":{},"body":{"interfaces/DragSource.html":{}}}],["part",{"_index":861,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["particular",{"_index":346,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["particularli",{"_index":1012,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["pass",{"_index":290,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["past",{"_index":1309,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["pattern",{"_index":89,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["pay",{"_index":1079,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["peer",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":228,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["perfectli",{"_index":1226,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["perform",{"_index":188,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["pick",{"_index":483,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["piec",{"_index":234,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pipe",{"_index":985,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pipelin",{"_index":757,"title":{},"body":{"index.html":{}}}],["place",{"_index":500,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["plain",{"_index":60,"title":{},"body":{"interfaces/BackendInput.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["plan",{"_index":255,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["play",{"_index":1034,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["player",{"_index":1221,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["plenti",{"_index":770,"title":{},"body":{"index.html":{}}}],["plural",{"_index":539,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["point",{"_index":1078,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["pointer",{"_index":547,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["poor",{"_index":947,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["popul",{"_index":1350,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["pose",{"_index":965,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["posit",{"_index":223,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["possibil",{"_index":270,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["possibl",{"_index":715,"title":{},"body":{"index.html":{}}}],["potenti",{"_index":801,"title":{},"body":{"index.html":{}}}],["power",{"_index":681,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["practic",{"_index":252,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["precis",{"_index":709,"title":{},"body":{"index.html":{}}}],["present",{"_index":1282,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["preserv",{"_index":1229,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["press",{"_index":476,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["prevent",{"_index":456,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["preview",{"_index":180,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["previous",{"_index":373,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{}}}],["primari",{"_index":1313,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["privat",{"_index":1238,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["probabl",{"_index":149,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["problem",{"_index":797,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["procedur",{"_index":1251,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["process",{"_index":1225,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["produc",{"_index":617,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["product",{"_index":1033,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["program",{"_index":754,"title":{},"body":{"index.html":{}}}],["progress",{"_index":277,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["project",{"_index":580,"title":{},"body":{"interfaces/MonitorBase.html":{},"changelog.html":{}}}],["prop",{"_index":1292,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["properti",{"_index":56,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["props.someproperti",{"_index":1294,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["props.typ",{"_index":1342,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["prospect",{"_index":1163,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["provid",{"_index":34,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["public",{"_index":607,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["publish",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["pull",{"_index":249,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["pure",{"_index":240,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["put",{"_index":487,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["queri",{"_index":496,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["quick",{"_index":1290,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["quickstart",{"_index":686,"title":{"additional-documentation/quickstart.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["quit",{"_index":773,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["rapidli",{"_index":1000,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["rare",{"_index":327,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["re",{"_index":706,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["react",{"_index":137,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["react.compon",{"_index":1299,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["react/react",{"_index":1308,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["read",{"_index":267,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["readi",{"_index":691,"title":{},"body":{"index.html":{}}}],["real",{"_index":912,"title":{},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["realli",{"_index":1082,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rear",{"_index":878,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["reason",{"_index":520,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["receiv",{"_index":557,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["recent",{"_index":1137,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["recognis",{"_index":469,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["recommend",{"_index":944,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["record",{"_index":425,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["rectangl",{"_index":951,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["red",{"_index":1249,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["reduc",{"_index":230,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["redund",{"_index":1144,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["refer",{"_index":129,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["reflect",{"_index":326,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["regist",{"_index":616,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{}}}],["regular",{"_index":908,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rel",{"_index":303,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["relat",{"_index":345,"title":{},"body":{"interfaces/DragSource.html":{},"index.html":{}}}],["releas",{"_index":805,"title":{},"body":{"index.html":{}}}],["relev",{"_index":285,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["rememb",{"_index":915,"title":{},"body":{"additional-documentation/guide.html":{}}}],["remind",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remov",{"_index":1156,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["renam",{"_index":881,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["render",{"_index":177,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["repeat(8",{"_index":1098,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replac",{"_index":1180,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replay",{"_index":1136,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replic",{"_index":419,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["repres",{"_index":6,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["requir",{"_index":87,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["resolv",{"_index":891,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resort",{"_index":336,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["respect",{"_index":854,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["respond",{"_index":914,"title":{},"body":{"additional-documentation/guide.html":{}}}],["respons",{"_index":1021,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rest",{"_index":1348,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["result",{"_index":29,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["result.dropeffect",{"_index":473,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["resurrect",{"_index":509,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["retain",{"_index":54,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["return",{"_index":28,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["reus",{"_index":245,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["reusabl",{"_index":584,"title":{},"body":{"interfaces/Offset.html":{}}}],["rgba(0,0,0,0",{"_index":1270,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["right",{"_index":312,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["root",{"_index":581,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{}}}],["row",{"_index":1100,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ruin",{"_index":1227,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rule",{"_index":735,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["run",{"_index":101,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["rxj",{"_index":7,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"dependencies.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rxjs/oper",{"_index":1260,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sake",{"_index":1102,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["same",{"_index":21,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["sane",{"_index":853,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["save",{"_index":983,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["scalar",{"_index":131,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["scope",{"_index":644,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["screen",{"_index":970,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["screenshot",{"_index":184,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["seamlessli",{"_index":869,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["second",{"_index":743,"title":{},"body":{"index.html":{}}}],["section",{"_index":1047,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["see",{"_index":57,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["seem",{"_index":1188,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["seen",{"_index":1245,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["select",{"_index":971,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["selector",{"_index":287,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sens",{"_index":1083,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sensibl",{"_index":329,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["separ",{"_index":237,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["serv",{"_index":1198,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["servic",{"_index":1140,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["set",{"_index":330,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["setdroptargettype(t",{"_index":540,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["settyp",{"_index":352,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/translating-react-code.html":{}}}],["settype(typ",{"_index":370,"title":{},"body":{"interfaces/DragSource.html":{}}}],["settype/settyp",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settypes(typ",{"_index":531,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["shallow",{"_index":548,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["shallowequ",{"_index":132,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["shortcut",{"_index":398,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["shorthand",{"_index":902,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["shouldn't",{"_index":521,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{}}}],["show",{"_index":443,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["showoverlay",{"_index":1262,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sick",{"_index":784,"title":{},"body":{"index.html":{}}}],["sidebar",{"_index":863,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["similar",{"_index":506,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["simpl",{"_index":418,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["simpler",{"_index":558,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["simpli",{"_index":229,"title":{},"body":{"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["simul",{"_index":368,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["singl",{"_index":945,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["situat",{"_index":938,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["sixtyfour",{"_index":1087,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["size",{"_index":306,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["skyhook",{"_index":648,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["skyhook'",{"_index":1288,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["skyhook/cor",{"_index":601,"title":{},"body":{"injectables/SkyhookDndService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["skyhook/multi",{"_index":44,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["skyhook/sort",{"_index":689,"title":{},"body":{"index.html":{}}}],["skyhook](https://github.com/angular",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["skyhookdndmodul",{"_index":39,"title":{"modules/SkyhookDndModule.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"modules/SkyhookDndModule.html":{},"modules.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["skyhookdndmodule.forroot",{"_index":45,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["skyhookdndservic",{"_index":75,"title":{"injectables/SkyhookDndService.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["skyhookdndservice#draglay",{"_index":920,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice#dragsourc",{"_index":917,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice#droptarget",{"_index":919,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice.draglay",{"_index":211,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["skyhookdndservice.dragsourc",{"_index":1289,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["slightli",{"_index":1210,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["small",{"_index":123,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["smaller",{"_index":967,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["smart",{"_index":238,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["solid",{"_index":1096,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["solut",{"_index":721,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["solv",{"_index":868,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["somebackend",{"_index":894,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["somedragsourceconnection.connectdragpreview(img",{"_index":981,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["someimaginarybackendwithnamedexport",{"_index":882,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["someon",{"_index":1244,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["someproperti",{"_index":1293,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["someth",{"_index":218,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sometim",{"_index":187,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["somewher",{"_index":250,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sortabl",{"_index":764,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":204,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["source'",{"_index":559,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["space",{"_index":1069,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["span",{"_index":1036,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spec",{"_index":91,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["spec.hov",{"_index":99,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["spec.hover(monitor",{"_index":100,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["special",{"_index":196,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["specif",{"_index":728,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["specifi",{"_index":85,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["specification.t",{"_index":450,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["spirit",{"_index":1247,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spot",{"_index":205,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["squar",{"_index":1025,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squarecompon",{"_index":1022,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["src/.../tokens.t",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../type",{"_index":819,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../wrappers.t",{"_index":815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/connect",{"_index":64,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["src/connector.service.t",{"_index":4,"title":{},"body":{"interfaces/AddSubscription.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{}}}],["src/connectors.t",{"_index":291,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["src/dnd.directive.t",{"_index":282,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["src/dnd.module.t",{"_index":32,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{}}}],["src/drag",{"_index":449,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"coverage.html":{}}}],["src/drop",{"_index":551,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["src/layer",{"_index":271,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"coverage.html":{}}}],["src/monitor",{"_index":563,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["src/sourc",{"_index":403,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"coverage.html":{}}}],["src/target",{"_index":543,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["src/tokens.t",{"_index":660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/type",{"_index":582,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/wrappers.t",{"_index":820,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stage",{"_index":1224,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["stamp",{"_index":739,"title":{},"body":{"index.html":{}}}],["standard",{"_index":12,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["start",{"_index":203,"title":{"changelog.html":{},"index.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["state",{"_index":116,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["statement",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":892,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["stationari",{"_index":1214,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["step",{"_index":858,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["still",{"_index":1106,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["store",{"_index":923,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["strang",{"_index":932,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["strategi",{"_index":1185,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["strictli",{"_index":549,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"index.html":{}}}],["string",{"_index":371,"title":{},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["string|symbol",{"_index":1346,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["strong",{"_index":460,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["structur",{"_index":948,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["struggl",{"_index":786,"title":{},"body":{"index.html":{}}}],["style",{"_index":138,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["sub",{"_index":688,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["subj",{"_index":92,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subj.next",{"_index":98,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subject",{"_index":94,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["subscrib",{"_index":158,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscribe(callback",{"_index":106,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscript",{"_index":8,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscription#add",{"_index":22,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["subscription.add",{"_index":72,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscription.add(conn",{"_index":939,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["subscriptionlik",{"_index":13,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["success",{"_index":1186,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["such",{"_index":331,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["suffic",{"_index":179,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["suffici",{"_index":498,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["superpow",{"_index":768,"title":{},"body":{"index.html":{}}}],["suppli",{"_index":248,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["support",{"_index":339,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{}}}],["sure",{"_index":213,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["switch",{"_index":643,"title":{},"body":{"changelog.html":{},"additional-documentation/quickstart.html":{}}}],["symbol",{"_index":821,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["syntax",{"_index":846,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["t",{"_index":541,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["tabl",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1051,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["take",{"_index":710,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["target",{"_index":382,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["tast",{"_index":780,"title":{},"body":{"index.html":{}}}],["tear",{"_index":924,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["teardown",{"_index":107,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["teardownlog",{"_index":20,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["technic",{"_index":515,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["tediou",{"_index":594,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["tell",{"_index":1211,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["templat",{"_index":154,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["template'",{"_index":1336,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["tempt",{"_index":486,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ten",{"_index":937,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["term",{"_index":1332,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["test",{"_index":369,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["text",{"_index":972,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["that'",{"_index":348,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/quickstart.html":{}}}],["there'",{"_index":788,"title":{},"body":{"index.html":{}}}],["therefor",{"_index":1322,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["thing",{"_index":723,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["think",{"_index":791,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.black",{"_index":1056,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.cat.id",{"_index":926,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.collected$.pipe(map(c",{"_index":1263,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.collected$.pipe(map(col",{"_index":1267,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.currentposit",{"_index":1166,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.destroy",{"_index":603,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.destroy.add(xxx.subscrib",{"_index":598,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.destroy.unsubscrib",{"_index":604,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.dnd.dragsourc",{"_index":462,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"cat",{"_index":925,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"dragm",{"_index":952,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.dragsource(\"pap",{"_index":901,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.dnd.dragsource(itemtypes.knight",{"_index":1207,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.dnd.dragsource(nul",{"_index":383,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.dnd.droptarget",{"_index":472,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["this.dnd.droptarget(\"cat",{"_index":990,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["this.dnd.droptarget(\"dragm",{"_index":958,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.droptarget([\"cat",{"_index":927,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.droptarget(itemtypes.knight",{"_index":1232,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.fireaction(monitor.getitem",{"_index":1304,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.game.canmoveknight(po",{"_index":1177,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.canmoveknight(this.posit",{"_index":1236,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.knightposit",{"_index":1141,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(po",{"_index":1159,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(this.posit",{"_index":1237,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.id",{"_index":463,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["this.itemsource.destroy",{"_index":1307,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.itemsource.listen(monitor",{"_index":1305,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.knightposition$.next(to",{"_index":1139,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightposition$.subscribe(kp",{"_index":1165,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.connectdragpreview(img",{"_index":1278,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.listen(monitor",{"_index":1217,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.unsubscrib",{"_index":1208,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.layer.unsubscrib",{"_index":933,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.method",{"_index":897,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.model.parentid.tostr",{"_index":389,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.not",{"_index":1326,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.papercount",{"_index":904,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.posit",{"_index":1231,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.prop",{"_index":1301,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.someproperti",{"_index":421,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/translating-react-code.html":{}}}],["this.source.connectdragpreview(img",{"_index":361,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.listen(m",{"_index":1006,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["this.source.settype(t",{"_index":393,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.unsubscrib",{"_index":929,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.sub",{"_index":940,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.add(myservice.subscrib",{"_index":941,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.unsubscrib",{"_index":943,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.target.listen(m",{"_index":994,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.target.listen(monitor",{"_index":141,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["this.target.settype(\"parent_",{"_index":388,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.target.settype(this.typ",{"_index":386,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.target.unsubscrib",{"_index":930,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["those",{"_index":119,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["though",{"_index":514,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["three",{"_index":916,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["through",{"_index":126,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["throw",{"_index":1157,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tick",{"_index":320,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["tie",{"_index":620,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["time",{"_index":261,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["tini",{"_index":1015,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tmonitor",{"_index":109,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["to.i",{"_index":1172,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["to.x",{"_index":1170,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["token",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["told",{"_index":385,"title":{},"body":{"interfaces/DragSource.html":{}}}],["ton",{"_index":717,"title":{},"body":{"index.html":{}}}],["tool",{"_index":750,"title":{},"body":{"index.html":{}}}],["toolkit",{"_index":675,"title":{},"body":{"index.html":{}}}],["top",{"_index":314,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["touch",{"_index":835,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["touchbackend",{"_index":47,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["tradit",{"_index":732,"title":{},"body":{"index.html":{}}}],["transit",{"_index":579,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["translat",{"_index":304,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["transpar",{"_index":1219,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trap",{"_index":1124,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trash",{"_index":737,"title":{},"body":{"index.html":{}}}],["trello.com",{"_index":747,"title":{},"body":{"index.html":{}}}],["tri",{"_index":488,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["trick",{"_index":1146,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["troubleshoot",{"_index":875,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["true",{"_index":275,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["truth",{"_index":695,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["truthi",{"_index":1148,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tslib",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1067,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tutori",{"_index":687,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["two",{"_index":451,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type",{"_index":26,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type(",{"_index":1344,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["type(t",{"_index":392,"title":{},"body":{"interfaces/DragSource.html":{}}}],["type_dynam",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":812,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror",{"_index":876,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["typeortypearray",{"_index":532,"title":{},"body":{"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{}}}],["types.t",{"_index":65,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["typescript",{"_index":455,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["typic",{"_index":198,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["typo",{"_index":536,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["ui",{"_index":968,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ultra",{"_index":1127,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["undefin",{"_index":880,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["under",{"_index":221,"title":{},"body":{"interfaces/DragLayer.html":{},"changelog.html":{},"index.html":{}}}],["underli",{"_index":1230,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["understand",{"_index":391,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["unicod",{"_index":1037,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unidirect",{"_index":697,"title":{},"body":{"index.html":{}}}],["uniqu",{"_index":960,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["unlik",{"_index":1135,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unmount",{"_index":507,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["unsubscrib",{"_index":70,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["until",{"_index":102,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["unwant",{"_index":973,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["up",{"_index":429,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["updat",{"_index":264,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["url",{"_index":1276,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["us",{"_index":33,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["usabl",{"_index":1011,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["user",{"_index":446,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["usual",{"_index":354,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["valid",{"_index":1248,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["valu",{"_index":341,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["vanish",{"_index":1194,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["variabl",{"_index":155,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/ConnectionBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["vector",{"_index":576,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["veri",{"_index":413,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["version",{"_index":10,"title":{},"body":{"interfaces/AddSubscription.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["vertic",{"_index":313,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["via",{"_index":104,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["view",{"_index":1062,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["viewport",{"_index":575,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["visibl",{"_index":694,"title":{},"body":{"index.html":{}}}],["visual",{"_index":241,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["void",{"_index":110,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{}}}],["voil",{"_index":1178,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["vs",{"_index":907,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["vue",{"_index":789,"title":{},"body":{"index.html":{}}}],["wait",{"_index":979,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["want",{"_index":150,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["warn",{"_index":778,"title":{},"body":{"index.html":{}}}],["watch",{"_index":785,"title":{},"body":{"index.html":{}}}],["way",{"_index":843,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["we'll",{"_index":1035,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["we'r",{"_index":935,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["wealth",{"_index":796,"title":{},"body":{"index.html":{}}}],["web",{"_index":1281,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["weight",{"_index":1040,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["weird",{"_index":1190,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["well",{"_index":836,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["what'",{"_index":1203,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whatev",{"_index":1050,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whether",{"_index":217,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["white",{"_index":1024,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whole",{"_index":638,"title":{},"body":{"changelog.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["width",{"_index":1075,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wip",{"_index":690,"title":{},"body":{"index.html":{}}}],["wish",{"_index":376,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["within",{"_index":957,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["without",{"_index":82,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["won't",{"_index":342,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["work",{"_index":332,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["worth",{"_index":1019,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wrap",{"_index":1091,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper",{"_index":74,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper(dndservic",{"_index":90,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["write",{"_index":73,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"additional-documentation/chess-tutorial.html":{}}}],["written",{"_index":718,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["x",{"_index":586,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["x,i",{"_index":574,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["xxx",{"_index":847,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["xy",{"_index":585,"title":{},"body":{"interfaces/Offset.html":{}}}],["xy(i",{"_index":1114,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["y",{"_index":587,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["yarn",{"_index":684,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["ye",{"_index":365,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{}}}],["yellow",{"_index":1271,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you'd",{"_index":1204,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you'll",{"_index":1081,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you'r",{"_index":192,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["you'v",{"_index":1220,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["yourself",{"_index":194,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["zebra",{"_index":928,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["zindex",{"_index":1272,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["zone",{"_index":705,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":673,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddSubscription.html":{"url":"interfaces/AddSubscription.html","title":"interface - AddSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddSubscription\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n            \n                Description\n            \n            \n                Represents an RxJS Subscription, with multi-version compatibility.\nThe standard SubscriptionLike does not contain an add() method.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(teardownLogic: TeardownLogic)\n                    \n                \n\n\n\n\n                \n                    \n                            Same as RxJS Subscription#add \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teardownLogic\n                                                        \n                                                                    TeardownLogic\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AddSubscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendFactoryInput.html":{"url":"interfaces/BackendFactoryInput.html","title":"interface - BackendFactoryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BackendFactoryInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n            \n                Description\n            \n            \n                Use this for providing backends that need configuring before use to SkyhookDndModule.\nFor use with the MultiBackend:\n * import { createDefaultMultiBackend } from '@angular-skyhook/multi-backend';\n * // ...\n * SkyhookDndModule.forRoot({ backendFactory: createDefaultMultiBackend })\n *or with the TouchBackend by itself:\n * export function createTouchBackend() {\n *     return TouchBackend({ enableMouseEvents: false });\n * }\n * // ...\n * SkyhookDndModule.forRoot({ backendFactory: createTouchBackend })\n *You have to do this to retain AOT compatibility.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        backendFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backendFactory\n                                    \n                                \n                                \n                                    \n                                        backendFactory:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    See above. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendInput.html":{"url":"interfaces/BackendInput.html","title":"interface - BackendInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BackendInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n            \n                Description\n            \n            \n                Use this for providing plain backends to SkyhookDndModule. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        backend\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                    \n                                \n                                \n                                    \n                                        backend:     BackendFactory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BackendFactory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A plain backend, for example the HTML5Backend. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConnectionBase.html":{"url":"interfaces/ConnectionBase.html","title":"interface - ConnectionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConnectionBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                A base type to represent a DOM connection.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                                \n                                    listen\n                                \n                                \n                                    unsubscribe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(teardown: TeardownLogic)\n                    \n                \n\n\n\n\n                \n                    \n                            Same as RxJS Subscription.add().\nUseful, for example, for writing wrappers for the SkyhookDndService methods,\nwhich might internally listen()/subscribe to DropTargetSpec and provide\na convenient callback after you hover without dropping or exiting for a specified\nduration. That would require the following pattern:\nfunction wrapper(dndService, types, spec, callback) {\n    let subj = new Subject();\n    let dt = dndService.dropTarget(types, {\n        ...spec,\n        hover: monitor => {\n            subj.next();\n            spec.hover && spec.hover(monitor);\n        }\n    });\n    // runs the callback until the returned connection\n    // is destroyed via unsubscribe()\n    dt.add(subj.pipe( ... ).subscribe(callback))\n    return dt;\n}\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teardown\n                                                        \n                                                                    TeardownLogic\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listen\n                            \n                            \n                        \n                    \n                \n                \n                    \nlisten(mapTo: (monitor: TMonitor) => void)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        O\n                                \n                            \n                        \n\n                \n                    \n                            A connection maintains a subscription to dnd-core's drag state\nchanges. This function is how you are notified of those changes.\nThis function is essentially RxJS Observable.map with one small\noptimization: it runs the output of\nthe function you provide through distinctUntilChanged, and checks\nreference equality (===) for scalars and shallowEqual for Objects.\nBecause of #2, you can happily emulate react-dnd-style code like:\ncollected$ = this.target.listen(monitor => ({\n  isDragging: monitor.isDragging(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop(),\n}));... in which case you probably want to use the *ngIf as pattern for\n  grouping subscriptions into one bound template variable:\n\n  {{c.isDragging ? 'dragging': null}}\n  ...\nYou can also subscribe one-by-one, with isDragging$ = listen(m => m.isDragging()).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapTo\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \nunsubscribe()\n                    \n                \n\n\n\n\n                \n                    \n                            This method MUST be called, however you choose to, when ngOnDestroy() fires.\nIf you don't, you will leave subscriptions hanging around that will fire\ncallbacks on components that no longer exist.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayer.html":{"url":"interfaces/DragLayer.html","title":"interface - DragLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragLayer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                For many use cases, the default rendering of the HTML5 backend should suffice.\nHowever, its drag preview has certain limitations. For example, it has to be an\nexisting node screenshot or an image, and it cannot change midflight.\nSometimes you might want to perform the custom rendering. This also becomes\nnecessary if you're using a custom backend. DragLayer lets you perform the\nrendering of the drag preview yourself.\nA drag layer is a special subscriber to the global drag state. It is called\na 'layer', not just a subscriber, because it is typically used to render custom\nelements that follow the mouse, above all other elements. The data flows like\nso:\ndrag start => global state => drag source => no preview\n                              => drag layer  => preview rendered on the spot\ndrag moved => global state => drag layer  => preview moves\ndrag ends  => global state => drag layer  => preview erasedTo use a drag layer as designed:\n\nCreate a drag layer: SkyhookDndService.dragLayer. Make sure to unsubscribe from\nit in ngOnDestroy().\n\nListen to global drag state changes with DragLayer.listen. These are all available on DragLayerMonitor:\nwhether something is being dragged, what type it is, where the drag started, where the dragged element is now.\n\nIf dragging, render a custom preview under the current mouse position,\ndepending on the item type, in a position: fixed 'layer'. You may like to\nuse an *ngSwitch on the type, rather than one drag layer per type, simply\nto reduce code duplication.\n\n\nYou can see an example of a drag layer over on the Examples page.\nOne piece of advice for using drag layers effectively is to separate 'smart' and\n'dumb' components. If you have one component purely for visuals, which does all\ninput through @Input() and all interactivity through @Output() events, then\nyou can reuse it to display a drag preview based on either data in the item from\nDragSourceSpec.beginDrag, or supplied by a 'smart' component which pulls\ndata from somewhere else using only an id. This practice is even more\nimportant if you are using, or planning on using, anything other than the HTML5\nbackend, because no other backend provides automatic previews. In those cases\nyou must handle every draggable type in a drag layer to have any previews at\nall.\nOr, you could just use @angular-skyhook/multi-backend.\n\n            \n\n            \n                Extends\n            \n            \n                    ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    listen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listen\n                            \n                            \n                        \n                    \n                \n                \n                    \nlisten(mapTo: (monitor: DragLayerMonitor) => void)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        O\n                                \n                            \n                        \n\n                \n                    \n                            For listen functions in general, see ConnectionBase.\nThis listen function is called any time the global drag state\nchanges, including the coordinate changes, so that your component can\nprovide a timely updated custom drag preview. You can ask the monitor for\nthe client coordinates of the dragged item. Read the DragLayerMonitor\ndocs to see all the different possibile coordinates you might subscribe\nto.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapTo\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayerMonitor.html":{"url":"interfaces/DragLayerMonitor.html","title":"interface - DragLayerMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragLayerMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/layer-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available inside DragLayer.\n\n            \n\n            \n                Extends\n            \n            \n                    MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging()\n                    \n                \n\n\n\n\n                \n                    \n                            true if there is a drag operation in progress, false otherwise. \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragPreviewDirective.html":{"url":"directives/DragPreviewDirective.html","title":"directive - DragPreviewDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DragPreviewDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to specify which element a DragSource should screenshot as an HTML5 drag preview.\nOnly relevant when using the HTML5 backend.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dragPreview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragPreview\n                            \n                            \n                                dragPreviewOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragPreview\n                    \n                    \n                        The drag source for which this element will be the preview. \n\n                            \n                            Type :    DragSource\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragPreviewOptions\n                    \n                    \n                        Pass an options object as you would to DragSource. \n\n                            \n                            Type :    DragPreviewOptions\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragPreviewOptions.html":{"url":"interfaces/DragPreviewOptions.html","title":"interface - DragPreviewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragPreviewOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n            \n                Description\n            \n            \n                Provide options for how to render a drag preview. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        anchorX\n                                \n                                \n                                            Optional\n                                        anchorY\n                                \n                                \n                                            Optional\n                                        captureDraggingState\n                                \n                                \n                                            Optional\n                                        offsetX\n                                \n                                \n                                            Optional\n                                        offsetY\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anchorX\n                                    \n                                \n                                \n                                    \n                                        anchorX:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nhorizontal offset of the drag preview when their sizes don't match.\n0 means \"dock the preview to the left\", 0.5 means \"interpolate linearly\"\nand 1 means \"dock the preview to the right\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        anchorY\n                                    \n                                \n                                \n                                    \n                                        anchorY:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nvertical offset of the drag preview when their sizes don't match. 0 means\n\"dock the preview to the top, 0.5 means \"interpolate linearly\" and\n1 means \"dock the preview to the bottom.\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        captureDraggingState\n                                    \n                                \n                                \n                                    \n                                        captureDraggingState:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, false. If true, the component will learn that it is being\ndragged immediately as the drag starts instead of the next tick. This\nmeans that the screenshotting would occur with monitor.isDragging()\nalready being true, and if you apply any styling like a decreased opacity\nto the dragged element, this styling will also be reflected on the\nscreenshot. This is rarely desirable, so false is a sensible default.\nHowever, you might want to set it to true in rare cases, such as if you\nwant to make the custom drag layers work in IE and you need to hide the\noriginal element without resorting to an empty drag preview which IE\ndoesn't support.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetX\n                                    \n                                \n                                \n                                    \n                                        offsetX:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetX has a value, anchorX won't be\nused.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetY\n                                    \n                                \n                                \n                                    \n                                        offsetY:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetY has a value, anchorY won't be\nused.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSource.html":{"url":"interfaces/DragSource.html","title":"interface - DragSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSource\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                Like DropTarget, it can be used just for subscribing to\ndrag state information related to a particular item type or list of types.\nYou do not have to connect it to a DOM element if that's all you want.\nTo create one, refer to SkyhookDndService.\n\n            \n\n            \n                Extends\n            \n            \n                    ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectDragPreview\n                                \n                                \n                                    connectDragSource\n                                \n                                \n                                    getHandlerId\n                                \n                                \n                                    setType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectDragPreview\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectDragPreview(elementOrNode: Node, options?: DragPreviewOptions)\n                    \n                \n\n\n\n\n                \n                    \n                            This function allows you to connect a DOM node to your DragSource as a preview.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nYou might use an ElementRef.nativeElement, or even an\nImage.\nconst img = new Image();\nimg.onload = this.source.connectDragPreview(img);\nimg.src = '...';The subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementOrNode\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    DragPreviewOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectDragSource\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectDragSource(elementOrNode: Node, options?: DragSourceOptions)\n                    \n                \n\n\n\n\n                \n                    \n                            This function allows you to connect a DOM node to your DragSource.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementOrNode\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    DragSourceOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHandlerId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHandlerId()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns the drag source ID that can be used to simulate the drag and drop events with the testing backend. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setType\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetType(type: string | )\n                    \n                \n\n\n\n\n                \n                    \n                            Use this method to have a dynamically typed source. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDragSourceSpec property.\nIf you wish to have a dynamic type based on an @Input() property, for\nexample, you must call setType() in either of your component's\nngOnInit or ngOnChanges methods:\n@Input() type: string;\n@Input() model: { parentId: number; name: string; };\ntarget = this.dnd.dragSource(null, {\n  // ...\n});\nngOnChanges() {\n  // use what your parent component told you to\n  this.target.setType(this.type);\n  // or create groupings on the fly\n  this.target.setType(\"PARENT_\" + this.model.parentId.toString());\n}It may be more convenient or easier to understand if you write:\n@Input() set type(t) {\n  this.source.setType(t);\n}\nsource = this.dnd.dragSource(null, {\n  beginDrag: () => ({ ... })\n});\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string | \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragSourceDirective.html":{"url":"directives/DragSourceDirective.html","title":"directive - DragSourceDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DragSourceDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to connect a DragSource to an element in a component template.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dragSource]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragSource\n                            \n                            \n                                dragSourceOptions\n                            \n                            \n                                dragSourceType\n                            \n                            \n                                noHTML5Preview\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragSource\n                    \n                    \n                        Which source to connect the DOM to \n\n                            \n                            Type :    DragSource\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceOptions\n                    \n                    \n                        Pass an options object as you would to DragSource. \n\n                            \n                            Type :    DragSourceOptions\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceType\n                    \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs DragSource. \n\n                            \n                            Type :    string | \n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        noHTML5Preview\n                    \n                    \n                        Do not render an HTML5 preview. Only applies when using the HTML5 backend.\nIt does not use { captureDraggingState: true } for IE11 support; that is broken.\n\n                        \n                            Default value : false\n                        \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceMonitor.html":{"url":"interfaces/DragSourceMonitor.html","title":"interface - DragSourceMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/source-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available in DragSource's listen method. \n\n            \n\n            \n                Extends\n            \n            \n                    MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canDrag\n                                \n                                \n                                    didDrop\n                                \n                                \n                                    getDropResult\n                                \n                                \n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrag()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if NO drag operation is in progress, and the owner's\ncanDrag() returns true or is not defined.\nNote that canDrag doesn't blindly return what you supplied in\nDragSourceSpec, so it isn't very useful as a general\nsource-is-enabled/disabled flag.\nInstead, keep your canDrag logic simple, and replicate it in your template.\n content {\n  canDrag: () => this.someProperty\n}\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            didDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndidDrop()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if some drop target handled the drop event; false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside endDrag() to test whether any drop target\nhas handled the drop. Returns false if called outside endDrag().\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDropResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDropResult()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result from\ndrop() overrides the child drop result previously set by the child.\nReturns null if called outside endDrag().\n\n\n                            \n                                Returns :     DropResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if a drag operation is in progress, and either the owner\ninitiated the drag, or its isDragging() is defined and returns true.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceOptions.html":{"url":"interfaces/DragSourceOptions.html","title":"interface - DragSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n            \n                Description\n            \n            \n                Provide customisations for how a backend should handle a DragSource and\ndisplay items dragged from it. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dropEffect\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dropEffect\n                                    \n                                \n                                \n                                    \n                                        dropEffect:     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string. By default, 'move'. In the browsers that support this\nfeature, specifying 'copy' shows a special \"copying\" cursor, while 'move'\ncorresponds to the \"move\" cursor. You might want to use this option to\nprovide a hint to the user about whether an action is destructive.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceSpec.html":{"url":"interfaces/DragSourceSpec.html","title":"interface - DragSourceSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drag-source-specification.ts\n        \n\n            \n                Description\n            \n            \n                The spec passed to SkyhookDndService.\nNote the two type parameters. Both must represent plain JS objects.\nItem is the type you return from beginDrag(), and available in monitor.getItem().\nLimitations in TypeScript may prevent inferring this in many circumstances,\nand it will default to {}. It is best if you are strong-typing to pass a\ntype parameter like so:\n * interface MyDraggedItemType { id: number; }\n * // ...\n * source = this.dnd.dragSource(..., {\n *     beginDrag: monitor => ({ id: this.id })\n * })\n *DropResult is the type you expect a drop target to return from drop().\nIt is the type of the object returned by monitor.getDropResult() during endDrag().\nNote that your backend may assign some extra properties. You should define a\nDropResult type that recognises these, such as:\n * interface HTML5DropResult { dropEffect: string; }\n * interface MyDropResult extends HTML5DropResult { id: number; }\n * target = this.dnd.dropTarget(..., {\n *     drop: monitor => ({ id: this.id })\n * });\n *\n * source = this.dnd.dragSource(..., {\n *     endDrag: monitor => {\n *         const result = monitor.getDropResult();\n *         if (result.dropEffect === 'copy') {\n *             // user had alt key pressed + the GreenPlus icon when they dropped,\n *             // so copy instead of move\n *         }\n *     }\n * });\n *\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    beginDrag\n                                \n                                \n                                        Optional\n                                    canDrag\n                                \n                                \n                                        Optional\n                                    endDrag\n                                \n                                \n                                        Optional\n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beginDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \nbeginDrag(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Required. When the dragging starts, beginDrag is called. You must return\na plain JavaScript object describing the data being dragged. What you\nreturn is the only information available to the drop targets about the\ndrag source so it's important to pick the minimal data they need to know.\nYou may be tempted to put a reference to the component into it, but you\nshould try very hard to avoid doing this because it couples the drag\nsources and drop targets. It's a good idea to return something like `{ id:\n\nthis.id }` from this method.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Item\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            canDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrag(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Optional. Queries your component to determine whether this source can be\ndragged. Default returns true; this is often sufficient.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            endDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \nendDrag(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Optional. Notifies your component when dragging ends.\nThis is a good place to fire actions or modify a component. You will often\nwant to check DragSourceMonitor and DragSourceMonitor for more\ndetails.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            By default, only the drag source that initiated the drag operation is\nconsidered to be dragging. You might override this by matching on the\nDragSourceMonitor.id and your component's id, or similar. Do this if the\noriginal component may be unmounted during the dragging and later\n\"resurrected\" with a different parent. For example, when moving a card\nacross the lists in a Kanban board, you want it to retain the dragged\nappearance—even though technically, the component gets unmounted and\na different one gets mounted every time you hover over another list.\nNote: You may not call DragSourceMonitor inside this method.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTarget.html":{"url":"interfaces/DropTarget.html","title":"interface - DropTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTarget\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                Represents one drop target and its behaviour, that can listen to the state\nand connect to a DOM element.\nTo create one, refer to SkyhookDndService.\n\n            \n\n            \n                Extends\n            \n            \n                    ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectDropTarget\n                                \n                                \n                                    getHandlerId\n                                \n                                \n                                    setTypes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectDropTarget\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectDropTarget(elementOrNode: Node)\n                    \n                \n\n\n\n\n                \n                    \n                            This function allows you to connect a DOM node to your DropTarget.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DropTarget already has a type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementOrNode\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHandlerId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHandlerId()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns the drop target ID that can be used to simulate the drag and drop events with the testing backend. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTypes(type: TypeOrTypeArray)\n                    \n                \n\n\n\n\n                \n                    \n                            Use this method to have a dynamically typed target. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDropTargetSpec property.\nSee DragSource for an example of how to set\na dynamic type, for it is very similar here.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    TypeOrTypeArray\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropTargetDirective.html":{"url":"directives/DropTargetDirective.html","title":"directive - DropTargetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropTargetDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to connect a DropTarget to an element in a component template.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dropTarget]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dropTarget\n                            \n                            \n                                dropTargetType\n                            \n                            \n                                dropTargetTypes\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dropTargetType\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dropTarget\n                    \n                    \n                        Which target to connect the DOM to \n\n                            \n                            Type :    DropTarget\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                    \n                        Reduce typo confusion by allowing non-plural version of dropTargetTypes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetTypes\n                    \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs DropTarget. \n\n                            \n                            Type :    TypeOrTypeArray\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                \n\n\n                \n                    \n                        setdropTargetType(t)\n                    \n                \n                    \n                        \n                                Reduce typo confusion by allowing non-plural version of dropTargetTypes \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetMonitor.html":{"url":"interfaces/DropTargetMonitor.html","title":"interface - DropTargetMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTargetMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/target-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available in DropTarget's listen method. \n\n            \n\n            \n                Extends\n            \n            \n                    MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canDrop\n                                \n                                \n                                    didDrop\n                                \n                                \n                                    getDropResult\n                                \n                                \n                                    isOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrop()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if there is a drag operation in progress, and the owner's\ncanDrop() returns true or is not defined.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            didDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndidDrop()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if some drop target has handled the drop event, false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside drop() to test whether any nested drop\ntarget has already handled the drop. Returns false if called outside\ndrop().\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDropResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDropResult()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result\nfrom drop() overrides the drop result previously set by the child.\nReturns null if called outside drop().\n\n\n                            \n                                Returns :     DropResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOver\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOver(options?: literal type)\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if there is a drag operation in progress, and the pointer\nis currently hovering over the owner. You may optionally pass\n{ shallow: true } to strictly check whether only the owner is being\nhovered, as opposed to a nested target.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetSpec.html":{"url":"interfaces/DropTargetSpec.html","title":"interface - DropTargetSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTargetSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drop-target-specification.ts\n        \n\n            \n                Description\n            \n            \n                The spec passed to SkyhookDndService.\nNote the two type parameters. Both must represent plain JS objects. See the extended\ndiscussion of these type parameters at DragSourceSpec.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    canDrop\n                                \n                                \n                                        Optional\n                                    drop\n                                \n                                \n                                        Optional\n                                    hover\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            canDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrop(monitor: DropTargetMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Queries your component to determine whether an item can be dropped on this target.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\nDefault, when not specified, is true.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DropTargetMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            drop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndrop(monitor: DropTargetMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Called when a compatible item is dropped on the target. You may either\nreturn nothing, or a plain object.\nIf you return an object, it is going to become the drop result and will be\navailable to the drag source in its DragSourceSpec method as\nDropTargetMonitor. This is useful in case you want the\nsource to perform different actions depending on which target received the\ndrop. Otherwise, it is simpler to handle the dropped item here.\nIf you have nested drop targets, you can test whether a nested target has\nalready handled drop by checking DropTargetMonitor. Both this\nmethod and the source's endDrag() method are good places to fire\n@ngrx/store actions.\nThis method will not be called if canDrop() is defined and returns false.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DropTargetMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DropResult | void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hover\n                            \n                            \n                        \n                    \n                \n                \n                    \nhover(monitor: DropTargetMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Called frequently while the mouse hovers over the owner drop target while\ndragging a relevant item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DropTargetMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitorBase.html":{"url":"interfaces/MonitorBase.html","title":"interface - MonitorBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MonitorBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monitor-base.ts\n        \n\n            \n                Description\n            \n            \n                The methods common to all monitor classes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getClientOffset\n                                \n                                \n                                    getDifferenceFromInitialOffset\n                                \n                                \n                                    getInitialClientOffset\n                                \n                                \n                                    getInitialSourceClientOffset\n                                \n                                \n                                    getItem\n                                \n                                \n                                    getItemType\n                                \n                                \n                                    getSourceClientOffset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            The current mouse x,y position relative to the viewport. Returns null\nif no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDifferenceFromInitialOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDifferenceFromInitialOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            A vector x,y of the displacement of the dragged item from its initial\nposition. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitialClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitialClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            The initial mouse x,y position relative to the viewport, when the current\ndrag operation started. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitialSourceClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitialSourceClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            x,y relative to viewport of the item's DOM element before it was dragged.\nReturns null if no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItem()\n                    \n                \n\n\n\n\n                \n                    \n                            The item in transit, if any. This is what you returned from\nDragSourceSpec. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     Item | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemType\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemType()\n                    \n                \n\n\n\n\n                \n                    \n                            The type of the item in transit. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     string |  | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSourceClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSourceClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            The projected x,y position relative to viewport of the root DOM element of the drag source\n= its initial position + displacement. Returns null if no item is\nbeing dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Offset.html":{"url":"interfaces/Offset.html","title":"interface - Offset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Offset\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-ish.ts\n        \n\n            \n                Description\n            \n            \n                Just a plain, reusable xy coordinate type. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    x coordinate \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    y coordinate \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SkyhookDndModule.html":{"url":"modules/SkyhookDndModule.html","title":"module - SkyhookDndModule","body":"\n                   \n\n\n\n\n  Modules\n  SkyhookDndModule\n\n\n\n\n        \n            Info\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EXPORTS\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    EXPORTS\n                            \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SkyhookDndService.html":{"url":"injectables/SkyhookDndService.html","title":"injectable - SkyhookDndService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SkyhookDndService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n            \n                Description\n            \n            \n                For a simple component, unsubscribing is as easy as connection.unsubscribe() in ngOnDestroy()\nIf your components have lots of subscriptions, it can get tedious having to\nunsubscribe from all of them, and you might forget. A common pattern is to create an RxJS Subscription\n(maybe called destroy), to use this.destroy.add(xxx.subscribe(...))\nand to call destroy.unsubscribe() once to clean up all of them. @angular-skyhook/core\nsupports this pattern with by using the subscription parameter on the\nconstructors. Simply:\nimport { Subscription } from 'rxjs';\n// ...\ndestroy = new Subscription();\ntarget = this.dnd.dropTarget({\n  // ...\n}, this.destroy);\nngOnDestroy() { this.destroy.unsubscribe(); }It is a good habit for avoiding leaked subscriptions, because .\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dragLayer\n                            \n                            \n                                    Public\n                                dragSource\n                            \n                            \n                                    Public\n                                dropTarget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dragLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dragLayer(subscription?: AddSubscription)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        Item\n                                \n                            \n                        \n\n                \n                    \n                            This method creates a DragLayer object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscription\n                                                        \n                                                                    AddSubscription\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DragLayer\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dragSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dragSource(type: string |  | null, spec: DragSourceSpec, subscription?: AddSubscription)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        Item\n                                        DropResult\n                                \n                            \n                        \n\n                \n                    \n                            This method creates a DragSource object. It represents a drag\nsource and its behaviour, and can be connected to a DOM element by\nassigning it to the [dragSource] directive on that element in your\ntemplate.\nIt is the corollary of react-dnd's\nDragSource.\nThe spec argument (DragSourceSpec) is a set of queries and\ncallbacks that are called at appropriate times by the internals. The\nqueries are for asking your component whether to drag/listen and what\nitem data to hoist up; the callback (just 1) is for notifying you when\nthe drag ends.\nOnly the drop targets registered for the same type will\nreact to the items produced by this drag source. If you want a dynamic\ntype, pass null as the type; and call DragSource in\na lifecycle hook.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string |  | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        spec\n                                                        \n                                                                    DragSourceSpec\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        subscription\n                                                        \n                                                                    AddSubscription\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                An RxJS Subscription to tie the lifetime of the\nconnection to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DragSource\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dropTarget\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dropTarget(types: TypeOrTypeArray | null, spec: DropTargetSpec, subscription?: AddSubscription)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        Item\n                                        DropResult\n                                \n                            \n                        \n\n                \n                    \n                            This drop target will only react to the items produced by the drag sources\nof the specified type or types.\nIf you want a dynamic type, pass null as the type; and call\nDropTarget in a lifecycle hook.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        types\n                                                        \n                                                                    TypeOrTypeArray | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        spec\n                                                        \n                                                                    DropTargetSpec\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        subscription\n                                                        \n                                                                    AddSubscription\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DropTarget\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n\n1.0.11 (2018-09-11)\nBug Fixes\n\npublish dist directory instead of whole folder (50f7dc9)\n\n\n1.0.10 (2018-09-11)\nBug Fixes\n\npackage: switch to scoped packages, i.e. @skyhook/core (874723a)\nPublish under [@angular-skyhook](https://github.com/angular-skyhook)/* scope (d14b101)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/connection-types.ts\n            \n            \n                interface\n            \n            \n                ConnectionBase\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            \n                interface\n            \n            \n                DragLayer\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            \n                interface\n            \n            \n                DragSource\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            \n                interface\n            \n            \n                DropTarget\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connector.service.ts\n            \n            \n                injectable\n            \n            \n                SkyhookDndService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connector.service.ts\n            \n            \n                interface\n            \n            \n                AddSubscription\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/connectors.ts\n            \n            \n                interface\n            \n            \n                DragPreviewOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/connectors.ts\n            \n            \n                interface\n            \n            \n                DragSourceOptions\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            \n                directive\n            \n            \n                DragPreviewDirective\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            \n                directive\n            \n            \n                DragSourceDirective\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            \n                directive\n            \n            \n                DropTargetDirective\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/dnd.module.ts\n            \n            \n                interface\n            \n            \n                BackendFactoryInput\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/dnd.module.ts\n            \n            \n                interface\n            \n            \n                BackendInput\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/drag-source-specification.ts\n            \n            \n                interface\n            \n            \n                DragSourceSpec\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/drop-target-specification.ts\n            \n            \n                interface\n            \n            \n                DropTargetSpec\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/layer-monitor.ts\n            \n            \n                interface\n            \n            \n                DragLayerMonitor\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/monitor-base.ts\n            \n            \n                interface\n            \n            \n                MonitorBase\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/source-monitor.ts\n            \n            \n                interface\n            \n            \n                DragSourceMonitor\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/target-monitor.ts\n            \n            \n                interface\n            \n            \n                DropTargetMonitor\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            \n                variable\n            \n            \n                DRAG_DROP_BACKEND\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            \n                variable\n            \n            \n                DRAG_DROP_MANAGER\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            \n                variable\n            \n            \n                TYPE_DYNAMIC\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/type-ish.ts\n            \n            \n                interface\n            \n            \n                Offset\n            \n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            dnd-core : ^6.0.0\n        \n            tslib : ^1.9.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/core : >= 6.0.0\n        \n            rxjs : >= 6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@angular-skyhook\n \n\n\n\nSkyhook is a toolkit for building complex drag and drop interfaces in\nAngular. It is based on, and very similar to react-dnd by Dan\nAbramov and others, and is also powered by dnd-core. It\nis compatible with all backends.\nCheck out the examples here.\nInstallation\nyarn add @angular-skyhook/core react-dnd-html5-backendNext, follow the Quickstart and check out the Tutorial.\nSub-packages\n\n@angular-skyhook/multi-backend\n@angular-skyhook/sortable (WIP; docs not ready).\n\nFeatures\n\nMake any component draggable, or into a drop target.\nDoesn't mutate the DOM, and doesn't use classes and CSS to do 'callbacks'.\nEvery visible change is made through Angular templates.\nThe truth lives in JavaScript, with unidirectional data flow (like\n@ngrx/store)\nObservable APIs, designed to fit in Angular.\nTypeScript friendly, with strong typing for in-flight objects, and inline\ndocumentation.\nWorks with HTML5 drag and drop, and all other react-dnd backends.\n\nGoals\n\nHigh performance. All code runs outside the Angular zone, and\nre-enters in batches only where strictly necessary, such that change detection\nruns precisely as many times as you need it to, with no extra configuration.\nYou should also be able to take full advantage of OnPush change detection.\n\nLargely possible to translate react-dnd code and examples into Angular\n(see Translating React Code).\n\nComprehensive documentation and tons of example code, written in Angular\nstyle.\n\n\nWhat can you do with it?\nInstead of building maximally-ergonomic solutions to simple use cases,\nreact-dnd and @angular-skyhook provide an abstraction over most things you\ncould want to do with drag and drop. They are lower-level building blocks that\nmake it easy to implement some very complex interactions. They assign no\nspecific meaning to a drag/drop operation. You get to define what happens when\na drag starts or ends or hovers. Here are some ambitious examples:\n\nThe traditional react-dnd tutorial, a chess board with movable pieces and rules\nDeleting items by dragging them to a 'trash can', like in the macOS dock.\nStamping out a template by dragging the template into a work area\nMerging two items by dragging one on top of the other\nHover over a 'folder' for a few seconds to 'drill down' into it\nThe famous lists and cards on trello.com, which actually uses react-dnd\nA diagramming tool where you can draw links between nodes\nA 2D CAD program\nA graphical query builder, or visual data pipeline like Luna\nMany other demonstrations of react-dnd (most with GIFs) in use\n\nAlternatives\nIt is important to note that for bare-bones sortable lists, where you have\na mutable array of simple values, you don't necessarily need the superpowers in\nthis library. There are plenty of cookie-cutter solutions out there, like the\nquite powerful ng2-dnd or ng2-dragula, which may\nget you to your deadline faster than learning and using @angular-skyhook. But\nbe warned; you may find yourself wanting more dragging power once you get\na taste. In fact, this package was born when\n@cormacrelf got sick of maintaining\nng2-dragula and watching users struggle to implement what react-dnd was born\nfor.\nIf Angular and React aren't your thing, there's also vue-react-dnd.\nIssues\nNot all issues are @angular-skyhook-related. If you think you found a bug in\ndnd-core or with the HTML5 backend, those issues belong on that\ncodebase with their many contributors\nand wealth of experience. If there is a problem with another backend you are\nusing, file an issue with that backend so you can get more specific help and so\nthat the community can benefit.\nIssues and potential improvements to @angular-skyhook are discussed on\nGitHub.\nLicense\nThis library is released under the MIT license. It depends on dnd-core,\nwhich is (now) also under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SkyhookDndModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DragSourceDecorator   (src/.../wrappers.ts)\n                        \n                        \n                            DragSourceFactory   (src/.../wrappers.ts)\n                        \n                        \n                            DropTargetDecorator   (src/.../wrappers.ts)\n                        \n                        \n                            DropTargetFactory   (src/.../wrappers.ts)\n                        \n                        \n                            TypeOrTypeArray   (src/.../type-ish.ts)\n                        \n                        \n                            Types   (src/.../wrappers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/wrappers.ts\n    \n        \n            \n                \n                    \n                        \n                        DragSourceDecorator\n                    \n                \n                \n                    \n                        DragSourceDecorator:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        DragSourceFactory\n                    \n                \n                \n                    \n                        DragSourceFactory:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        DropTargetDecorator\n                    \n                \n                \n                    \n                        DropTargetDecorator:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        DropTargetFactory\n                    \n                \n                \n                    \n                        DropTargetFactory:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Types\n                    \n                \n                \n                    \n                        Types:     string |  | (string | )[]\n\n                    \n                \n            \n        \n\n    src/type-ish.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOrTypeArray\n                    \n                \n                    \n                        \n                            String, symbol, or an array of either. Used on drop targets. \n\n                        \n                    \n                \n                    \n                        TypeOrTypeArray:     string |  | Array\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DRAG_DROP_BACKEND   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_MANAGER   (src/.../tokens.ts)\n                        \n                        \n                            TYPE_DYNAMIC   (src/.../tokens.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_BACKEND\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DRAG_DROP_BACKEND:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n    'dnd-core compatible backend'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core compatible backend currently in use. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_MANAGER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DRAG_DROP_MANAGER:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken>(\n    'dnd-core DragDropManager'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core DragDropManager \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TYPE_DYNAMIC\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TYPE_DYNAMIC:     \n\n                    \n                \n                    \n                        \n                            Default value : Symbol(\n    'no type specified, you must provide one with setType/setTypes'\n)\n                        \n                    \n\n                \n                    \n                        The type a source or target is given as a marker for 'you supplied null as a type',\nso that library consumers can be reminded to use setType/setTypes manually.\nSee DragSource, DropTarget.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/quickstart.html":{"url":"additional-documentation/quickstart.html","title":"additional-page - Quickstart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation\nyarn add @angular-skyhook/core react-dnd-html5-backendYou might consider @angular-skyhook/multi-backend instead of the HTML5\nbackend, because it allows adding touch support as well.\nThen import SkyhookDndModule and provide the backend:\nimport { SkyhookDndModule } from \"@angular-skyhook/core\";\nimport { default as HTML5Backend } from 'react-dnd-html5-backend'\n\n@NgModule({\n  imports: [\n    // Don't forget the forRoot()\n    SkyhookDndModule.forRoot({ backend: HTML5Backend }),\n  ]\n})\nexport class AppModule {}If you need it again on a child module, like a lazy-loaded module, you only need\nto import SkyhookDndModule there. That way the backend and global drag state is only\ninitialized once. But you may use forRootto inject a new instance or to\ninclude drag and drop on only some child modules.\nWhen installing backends originally made for React (they all use default\nexports), make sure you use this syntax:\nimport { default as XXX } from '...'\n... because Angular in AOT mode cannot do import XXX from '...'\ndirectly.\nConcepts\nThese pieces make up the library:\n\nAn item (JS Object, not a DOM node) is the source of truth for each drag\noperation\nA drag source registers a DOM node to commence drag operations\nA drop target registers a DOM node for hover and drop events\nwhile dragging\nA way for each to provide, listen for and query changes in the drag state:\na monitor and appropriate callbacks\nHooks to provide some other DOM element as the drag preview.\n\nreact-dnd defined one more thing, inspired by HTML5, to make using this sane:\neach item has a type, and drag sources and drop targets will\nrespectively emit and accept only items with matching types.\nThat's it. This library offers all those concepts in an Angular-friendly way,\nthat is also largely compatible with a lot of react-dnd code and examples.\nNext steps\n\nHave a look at the Examples, and browse their source code in the\nexamples app on GitHub.\n\nRead and follow the Tutorial\n\nRead the 3-part guide in the sidebar. Any specifics are available by browsing the interfaces and\nclasses.\n\n\nTouch support and alternate backends\nMobile devices have not implemented HTML5 drag and drop. You will need:\n\nA different backend using click or touch events, without dropping desktop support\nA way to render drag previews. Where on desktops you\ncan let the browser render drag previews, when using a backend based on click\nor touch events, on mobile you have to render them yourself.\n\nA good way to solve both problems at once is using\n@angular-skyhook/multi-backend. It is based on the original\ndnd-multi-backend, which was designed to seamlessly switch\nbetween an HTML5 and a touch backend when it noticed different\nkinds of interaction. The @angular-skyhook version includes a preview component.\nNote also that you will need to use an exported function\nto provide the backend, to retain AOT compatibility, if it requires assembly.\nMultiBackend, for example, can be used like so:\nexport function createBackend() {\n    return MultiBackend(HTML5ToTouch);\n}\n@NgModule({\n  imports: [\n    SkyhookDndModule.forRoot({ backendFactory: createBackend })\n  ]\n}\n// ...Troubleshooting\nI get TypeError: backend is null, only when AOT is enabled\nAlso rears its head as No such property 'default' of undefined.\nTroubleshooting steps\n\nCheck you are importing the backend and renaming any default exports.\nimport { default as HTML5Backend } from 'react-dnd-html5-backend';\nimport { SomeImaginaryBackendWithNamedExports } from 'some-imaginary-backend';Generally, make sure you are importing the backend correctly. If it does not\nprovide Typescript definitions, you might have to read the documentation or\nbrowse the source code.\n\nMake sure in your root Angular module (usually app.module.ts) you import\nSkyhookDndModule.forRoot({ backend: MyBackend }) instead of plain SkyhookDndModule.\n\n\nI get Error encountered resolving symbol values statically. Calling function 'default' with AOT enabled.\nMake sure you are following the special instructions for assembly-required backends\nlike MultiBackend or any backend that allows SomeBackend({ optionsHere: true }),\nlike TouchBackend. See above.\nIn the spec callbacks, my component doesn't have any properties, and it can't call this.method()!\nMake sure you use the arrow function syntax (() =>) in your specs so this will refer to your component. Example:\npaperCount = 3;\nlimitedSupplyOfPaper = this.dnd.dragSource(\"PAPER\", {\n    // use shorthand for one-liners that return a value\n    canDrag: () => this.paperCount > 0,\n    endDrag: (monitor) => {\n        if (monitor.didDrop()) {\n            this.paperCount--;\n        }\n    }\n});This demo shows comprehensively what this refers to\nin arrow functions vs regular ones. A sufficiently advanced editor shouldn't\nshow any completions at this.| in a regular function, as it will resolve the\ntype of this to be any.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide.html":{"url":"additional-documentation/guide.html","title":"additional-page - Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhen using @angular-skyhook, you follow this general pattern:\n\nCreate a connection and specify its behaviour: Creating Connections\nUse directives or methods to connect it to real DOM elements:\nConnecting to DOM\nUse the connection's listen method to listen for relevant state changes, and respond to them:\nMonitoring State\nRemember to destroy the connection in ngOnDestroy(). Refer to part 1\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/1.-creating-connections.html":{"url":"additional-documentation/guide/1.-creating-connections.html","title":"additional-page - 1. Creating connections","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreating connections\nThere are three types of connection.\n\nDragSource\nis for allowing components to be dragged. Create one with\nSkyhookDndService#dragSource\nusing a\nDragSourceSpec\nand attach it to the DOM\nwith [dragSource]=\"...\".\n\nDropTarget\nis for allowing components to be dragged. Create one with\nSkyhookDndService#dropTarget\nusing a\nDropTargetSpec\nand attach it to the DOM\nwith [dropTarget]=\"...\".\n\nDragLayer\nis an advanced feature that allows you to implement your own\ncustom drag previews. Create one with\nSkyhookDndService#dragLayer,\nbut you don't attach them to the DOM, you simply listen for changes.\n\n\nAll three of them have the same lifecycle, and all three of them offer a\n.listen() function, which allows you to listen to changes. See\nConnectionBase for what they have in\ncommon.\nUsing the SkyhookDndService to create connections\nFirst, inject \nSkyhookDndService,\n into your component.\nconstructor(private dnd: SkyhookDndService) { ... }Then, use one of the methods\nSkyhookDndService#dragSource,\nSkyhookDndService#dropTarget\nto create one and store it as an instance variable, and make sure to tear down\nthe connection in ngOnDestroy.\nsource = this.dnd.dragSource(\"CAT\", {\n  beginDrag: (monitor) => ({ id: this.cat.id })\n  // ...\n});\n// or\ntarget = this.dnd.dropTarget([\"CAT\", \"ZEBRA\"], {\n  // ...\n});\nconstructor(private dnd: SkyhookDndService) { ... }\n\nngOnDestroy() {\n  this.source.unsubscribe();\n  // or\n  this.target.unsubscribe();\n}Then, you will want to add some behaviour beyond the default by looking into the\nSpec input for your connection type.\nDestroying Connections\nAll three types of connection need to be destroyed when your component is\ndestroyed. If you don't, you will have strange problems.\nThe easy way is to call\n.unsubscribe() on the\nconnection object in ngOnDestroy.\nngOnDestroy() {\n    this.source.unsubscribe();\n    this.target.unsubscribe();\n    this.layer.unsubscribe();\n    // neat. we're done.\n}\nBut I have ten other subscriptions!\nIn situations where your component has a lot of subscription logic to\nmaintain, there are more powerful ways of unsubscribing to many things at once.\nYou can create an RxJS Subscription object in your component, and call\nSubscription.add(conn) with your connection. There is a convenience parameter\non each of the SkyhookDndService methods which will do this for you.\nimport { Subscription } from 'rxjs';\n\n// ...\n\nsubs = new Subscription();\n\nsource = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\ntarget = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\n// ...\n\nngOnInit() {\n    // subscribe to lots of things here\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n}\nngOnDestroy() {\n  // This will unsubscribe everything, including source and target\n  this.subs.unsubscribe();\n}(It is not recommended to have a large number of drag sources and drop targets\nattached to a single component, especially not in a variably-sized array,\nsimply because that is poor component structure. Instead, consider creating a\ncomponent that handles a single piece of dragging logic, and use an *ngFor over\nthe whole component.)\nNext: Connecting to DOM.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/2.-connecting-to-dom.html":{"url":"additional-documentation/guide/2.-connecting-to-dom.html","title":"additional-page - 2. Connecting to DOM","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConnecting sources and targets to real DOM elements\nOnce you have created a connection, it is most useful when connected to a real\nDOM element.\nMaking a DOM element draggable\nThis means that events fired inside the element's bounding rectangle will start\na drag. Use DragSourceDirective to do this. It's as simple as:\n\n  drag me\nsource = this.dnd.dragSource(\"DRAGME\", {\n  beginDrag: () => ({ name: 'Jones McFly' }),\n  // other DragSourceSpec methods\n});\n// constructor, unsubscribe, etcThen, investigate using\nDragSourceSpec\nto customise the behaviour.\nMaking a DOM element into a drop target\nThis means your element will react to items being hovered or dropped within its\nbounding rectangle.\n\n  drop on me\ntarget = this.dnd.dropTarget(\"DRAGME\", {\n    drop: monitor => {\n        console.log('dropped an item:', monitor.getItem()); // => { name: 'Jones McFly' }\n    }\n})\n// constructor, unsubscribe, etcThen, investigate using\nDropTargetSpec\nto customise the behaviour.\nDrag previews\nThis is a feature unique to the HTML5 backend. If you are using another\nbackend, you will need a Drag Layer (see below) to render anything that follows\nthe mouse.\nBy default, a static screenshot of the original [dragSource] element will form\na drag preview and follow the mouse around.\nUsing a different element as the preview source\nIf you want another element to be the source of the preview, you can use the\n[dragPreview]=\"source\" directive.\nIf you place a DragPreviewDirective on a different element than the\n[dragSource], and pass the same DragSource connection to it, the\npreview element will take over the job of posing for the preview screenshot.\nUsing a 'drag handle'\nThis is a common use of custom drag previews, where a box with a smaller handle\nwithin it is only draggable from the handle. This is useful for moving\ninteractive blocks of UI (e.g.  elements) around the screen, without\ntouching the inputs / selecting text / making unwanted changes.\n\nAttach [dragSource]=\"source\" to the handle.\nAttach [dragPreview]=\"source\" to the overall box being dragged.\nAs always, you may consider applying CSS cursor: move or cursor: grab or\nsimilar to the handle, to make sure users can discover what the handle is\nfor.\n\nUsing an image preview\n\nCreate an image element with const img = new Image(); img.src = \"...\";\nUse img.onload = () => { ... } to wait for it to load. Inside the onload\ncallback, run someDragSourceConnection.connectDragPreview(img).\n\nSee DragSource.connectDragPreview and DragPreviewOptions for options.\nNext: Monitoring State.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/3.-monitoring-state.html":{"url":"additional-documentation/guide/3.-monitoring-state.html","title":"additional-page - 3. Monitoring State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMonitoring State\nHow to change your template depending on the drag state\n\nTake any connection object, like DropTarget\nCall .listen() with a function that returns what information you want to\nmonitor\nSave the resulting Observable to an instance variable in your component\nUse the observable via the | async pipe to render alternate content in\nyour template.\n\nFor example:\n\n    drop cats here\n.cat-target { background: #eee; }\n.cat-target--hovering { background: lightgoldenrodyellow; }target = this.dnd.dropTarget(\"CAT\", {\n    drop: monitor => {\n        console.log('dropped a cat');\n    }\n});\n\n// this is a very useful combination on a drop target,\n// which expresses 'hovering over' + ('same type' + 'DropTargetSpec.canDrop returned true')\n// you almost always want to use the combination rather than isOver on its own\nhovering$ = this.target.listen(m => m.isOver() && m.canDrop());What can you listen to?\nEach type of connection gets a different set of information available on the\nmonitor. They are laid out in these interfaces:\n\nDragSourceMonitor\nDropTargetMonitor\nDragLayerMonitor\nAll three derive from MonitorBase\n\nOptimisation\nNote that all three monitors have very rapidly-changing information available on\nthem, such as the current viewport-mouse offset. The .listen() functions will\noptimise component updates for you. You don't want to:\n\nSubscribe to more properties than you need. This hinders performance.\nSubscribe to the entire monitor object. It will only fire once, and then\nnever again, because the monitor object itself is the same each time.\n\nThe implementation of listen() includes an implementation of RxJS'\ndistinctUntilChanged that also optimises for JS Objects with the same keys\nbut different values. The following two examples fire exactly as often:\nisDraggingPlain$ = this.source.listen(m => m.isDragging());\nisDraggingObj$   = this.source.listen(m => ({ isDragging: m.isDragging() }));This is helpful if you have a lot of properties to listen to and wish to\nreduce the number of | async pipes in your code, or if you want to copy\nsome react-dnd code.\nMaking decisions in the Spec based on current drag state\nThe other place you get access to a monitor is in the callbacks in each Spec.\nMonitors carry some information only relevant and usable inside these callbacks.\nThose methods are documented in the monitor interfaces, and particularly useful\nmethods are highlighted in each of the Spec callbacks, such as\nDropTargetSpec.drop.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/chess-tutorial.html":{"url":"additional-documentation/chess-tutorial.html","title":"additional-page - Chess Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChess Tutorial\nIn this tutorial, we're building a tiny chess game, with one knight on the\nboard. It's an Angular-specific translation of the original react-dnd\ntutorial. The discussion about how to break down this game into\ncomponents is worth reading the original for. We will carry on implementing the\nthree components:\n\nKnightComponent, responsible for rendering one knight piece\nSquareComponent, just one black or white square on the board\nBoardComponent, 64 squares.\n\nThis tutorial assumes you are familiar with the basics of Angular (version 2+).\nIt also assumes you have read the Quickstart guide, and have attached the\nSkyhookDndModule and the HTML5 backend. Complete source code is available on\nGitHub, in four commits: one, two,\nthree, four, the last of which is the finished\nproduct. You can play with a live demo.\nBasic chess visuals\nWe'll build the KnightComponent first. It is very simple, just a span with a Unicode\nknight character in it.\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-knight',\n    template: `♘`,\n    styles: [`\n    span {\n        font-weight: 400;\n        font-size: 54px;\n        line-height: 70px;\n    }\n    `]\n})\nexport class KnightComponent {\n}Add this component to your module's declarations section, and put\n somewhere on your page.\n\nNext, we will implement SquareComponent. It is responsible only for changing the colour\nof the background and foreground depending on a black input, and rendering\nwhatever was passed to it inside its tags. Make a SquareComponent, add it to\nyour module, and include the following very simple HTML template:\n\n  \nIn the body of the component class, add an input for whether the square should\nbe black or not:\n@Input() black: boolean;Then implement getStyle() by reading this property.\ngetStyle() {\n    return this.black\n        ? { backgroundColor: 'black', color: 'white' }\n        : { backgroundColor: 'white', color: 'black' }\n}Note that by attaching these styles directly via [ngStyle], they are not\naffected by Angular's view encapsulation, so color will apply to any child\ncomponents as well. You could achieve the same by using classes and CSS and\n::ng-deep or turning view encapsulation off, but [ngStyle] is good enough\nfor us.\nThen, we want SquareComponent to take up all the space available to it. This\nway, Square can be arbitrarily large, and we don't have to be concerned with how\nbig the whole board is going to be. Include the following in a styles block,\nor a linked CSS file.\n:host, div {\n    display: block;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n}At this point, you can render one square with a knight in it, like so:\n\n    \n\nIf you're paying attention, you'll notice that height: 100% doesn't really\nmean anything as none of the parent divs have a height to be 100% of, but it\nwill make sense later when we put the Square in a div that has an absolute\nheight.\nThen, let's build the board. Start by building out a component that just renders\none square.\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-board',\n    template: `\n    \n        \n            \n        \n    \n    `\n})\nexport class BoardComponent {\n}Now, we need to render 64 of them. We will need an *ngFor, but Angular isn't\nvery good at for loops, so we have to make an array of 64 items.\n\n    \n        \n    \n// ...\nexport class BoardComponent {\n    sixtyFour = new Array(64).fill(0).map((_, i) => i);\n}\nThen, you just have a lot of black squares in a vertical list. Not very chess-y.\nTo make it an 8x8 grid, we are going to wrap them all in a , and use the cool new CSS feature, CSS Grid. Make sure you are\nusing a modern browser. Apply this style to the wrapping .board:\n.board {\n    width: 100%;\n    height: 100%;\n    border: 1px solid black;\n    display: grid;\n    grid-template-columns: repeat(8, 12.5%);\n    grid-template-rows: repeat(8, 12.5%);\n}For brevity's sake you could just set .board to a fixed width and height\nof 560px. I added a ContainerComponent, just to specify that size, to keep\nthe board independent of where it will be placed. At this point, you will have\nan 8x8 board, but it still doesn't quite look like chess.\n\nMaking the chessboard pattern and placing one knight on the board\nWe're going to need a way to express coordinates on the board. Define a new\ninterface, to hold x and y coordinates.\nexport interface Coord {\n  x: number;\n  y: number;\n}Save it in a new file, coord.ts, and import it into your Board component file.\nThen, we need to convert [0..63] (the indices of the *ngFor) to Coord\nobjects.\nexport class Board {\n    // ...\n    xy(i): Coord {\n      return {\n          x: i % 8,\n          y: Math.floor(i / 8)\n      }\n    }\n}\nYou can then quite easily go from Coord to whether the square is black or not:\n    // ...\n    isBlack({ x, y }: Coord) {\n        return (x + y) % 2 === 1;\n    }Then, pass the result to each SquareComponent, and render only one KnightComponent in the top\nleft:\n\n    \n        \n    \nAnd look at that, we have a chess board with one knight.\n\nMaking the knight move around\n\nAt this point, your code should look like this commit. You can\nstart fresh from there if you want.\n\nWe can clearly represent the position of a knight in one Coord object. You\ncould store this on the BoardComponent itself:\n\nknightPosition: Coord = { x: 2, y: 5 };But we're going to want to read this elsewhere and drive the game logic from it,\nand we don't want all the game logic to be trapped inside the BoardComponent.\nSo, create a GameService, and represent the changing position of the knight\nwith an RxJS BehaviorSubject. This is an ultra-lightweight way of\nbuilding an @ngrx-style Store without any boilerplate. It allows us to\n'broadcast' updates to the knight's position to any interested components.\nLike any Subject, BehaviourSubject can be used as an Observable, and\ncomponents can subscribe to it with the | async pipe. But unlike a regular\nSubject, it can also have an initial value, and will replay the most recent\nvalue to any new subscribers. This is exactly what we want.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n\n    knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n\n    moveKnight(to: Coord) {\n        this.knightPosition$.next(to);\n    }\n\n}As you can see, this is a very simple service. Inject it into your\nBoardComponent, and let's put the Knight where the GameService\nsays it should go.\n\nknightPosition$ = this.game.knightPosition$;\nconstructor(private game: GameService) { }This works, but it's very hard to read. A better solution would be to put the\nentire *ngFor section in the scope of one subscription. You can do that\nwithout introducing a redundant , by using  and a fancy\ntrick: since knightPosition$|async is always truthy, you can put it in an\n*ngIf and give the result a name using the *ngIf=\"AAA as BBB\" syntax. Here's\nthe entire template:\n    \n        \n            \n                \n                    \n                    \n                \n            \n        \n    The resulting template is much clearer.\nNow that we have a knightPosition$ and even a GameService.moveKnight()\nfunction, we can hook up a click event on each  to move the knight\naround the board. We're going to remove it later, so just throw it in the\nBoardComponent:\nhandleSquareClick(pos: Coord) {\n    this.game.moveKnight(pos);\n}Click around, and your noble KnightComponent will follow, even though he is breaking\nthe rules. So, let's add the rules. Amend the GameService to include\na canMoveKnight function, based on the current position and a prospective\nposition. You can store the currentPosition by subscribing internally to\nknightPosition$ and writing out each new value into an instance variable.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n\n    knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n    currentPosition: Coord;\n\n    constructor() {\n        this.knightPosition$.subscribe(kp => {\n            this.currentPosition = kp;\n        })\n    }\n\n    moveKnight(to: Coord) {\n        this.knightPosition$.next(to);\n    }\n\n    canMoveKnight(to: Coord) {\n        const { x, y } = this.currentPosition;\n        const dx = to.x - x;\n        const dy = to.y - y;\n\n        return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n               (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n    }\n\n}Amend handleSquareClick to check the rules before executing the move:\nhandleSquareClick(pos: Coord) {\n    if (this.game.canMoveKnight(pos)) {\n        this.game.moveKnight(pos);\n    }\n}And voilà, your knight won't execute an illegal move. We will be replacing this\nclick handler in just a moment, but we have separated the game logic out, so we\ncan reuse those two functions.\nImplementing drag and drop\n\nAt this point, your code should be look like this commit.\n\nTake a moment to think about what we have to work with. We have:\n\nA KnightComponent which we want to be able to drag,\nMany SquareComponents on which he could be dropped,\nA way to express that state change (GameService.moveKnight),\nAnd a way to compute where we can drop him (GameService.canMoveKnight).\n\nOur strategy for implementing drag and drop is this:\n\nMake the knight draggable\nTurn all the squares into drop targets\nOnly allow drops into squares where canMoveKnight returns true\nOn each successful drop, call moveKnight, and Angular will re-render with\nthe new state.\nAdd some extra visuals to guide the interaction\n\nIf you have used other drag and drop libraries, this may seem a bit weird --\nwhat happens to the Knight that we're dragging after we drop him? The answer is,\nhe disappears. After step 1, we will have a knight you can pick up, but nothing\ninteresting will happen when we let go, except that the preview will vanish. We\nare going to do steps 3 and 4 on the drop targets, which are notified when you\ndrop something on them.\nPart 1. Make the knight draggable\nFirst, we need a type to describe what we're dragging, so that the squares can\nlisten for knights floating above them. Store a constant string \"KNIGHT\" in\na new file. This is better than typing the same string over and over, and serves\nas a single place where all your different chess piece types are defined.\n// constants.ts\nexport const ItemTypes = {\n    KNIGHT: \"KNIGHT\"\n}Then, make your KnightComponent into a drag source.\n\nInject SkyhookDndService into your KnightComponent\nCreate a dead simple drag source which emits ItemTypes.KNIGHT, and a simple\n{} to represent what's being dragged. We don't need any more information\nthan that, but if you were doing >1 piece, you would have to specify which\nknight was being dragged. This is where you'd do it.\nAttach the drag source to the Knight's DOM element.\nIn ngOnDestroy, unsubscribe the drag source.\n\nHere's all four in one go:\nimport { Component } from '@angular/core';\nimport { SkyhookDndService } from \"@angular-skyhook/core\";\nimport { ItemTypes } from './constants';\n\n@Component({\n    selector: 'app-knight',\n                     // step 3\n    template: `♘`,\n    styles: [`\n    span {\n        font-weight: 700;\n        font-size: 54px;\n    }\n    `]\n})\nexport class KnightComponent {\n    // step 2\n    knightSource = this.dnd.dragSource(ItemTypes.KNIGHT, {\n        beginDrag: () => ({})\n    });\n\n    // step 1\n    constructor(private dnd: SkyhookDndService) { }\n\n    // step 4\n    ngOnDestroy() {\n        this.knightSource.unsubscribe();\n    }\n}Try dragging your little knight, and you'll find that you can. But the\ninteraction is slightly confusing - you can't tell at a glance that the knight\nis conceptually in-flight, it just looks like there are two knights. So let's\nlisten to whether we are dragging the knight, and make the stationary one look\ndifferent while we are.\n\nUse the DragSource.listen and DragSourceMonitor.isDragging methods to\nget an observable isDragging$ on your KnightComponent.\nUse that observable in your template to change styles\n\n// component\n// (this is an Observable)\nisDragging$ = this.knightSource.listen(monitor => monitor.isDragging());\n♘/* in the style block */\n.dragging {\n    opacity: 0.25;\n}Now, the knight on the board will be a bit transparent when you've picked it up.\nYou could set it to opacity: 0, but in chess, players like to know where the\npiece came from. @angular-skyhook makes no assumptions about how to render\nany elements, so you can always customise their appearance at any stage of the\ndrag and drop process.\nPart 2: Make the squares into drop targets\nBecause canMoveKnight has to be computed once per square, each square is going\nto have to know where it is on the board. However, the SquareComponent is\nperfectly good at what it does. We don't want to ruin a good thing. Let's wrap\nit with another component, BoardSquareComponent, that will handle the drag and drop,\nand leave the black and white rendering to SquareComponent. This is a basic wrapper\nwhich preserves the size of the underlying squares:\nimport { Component, Input  } from \"@angular/core\";\n\n@Component({\n    selector: 'app-board-square',\n    template: `\n    \n        \n            \n        \n    \n    `, styles: [`\n    :host, .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    `]\n})\nexport class BoardSquareComponent {\n    @Input() position: Coord;\n    get black() {\n         const { x, y } = this.position;\n         return (x + y) % 2 === 1;\n    }\n}Add it to your module, and replace the  in the BoardComponent\ntemplate with this:\n\n    \nThen, we're going to add a drop target to BoardSquareComponent and attach it\nto that wrapper div. It's very similar to the drag source.\n\nInject SkyhookDndService\nCreate a drop target\nAttach it to the DOM\nUnsubscribe it in ngOnDestroy.\n\nimport { Component, Input  } from \"@angular/core\";\nimport { SkyhookDndService } from \"@angular-skyhook/core\";\nimport { ItemTypes } from \"./constants\";\n\n@Component({\n    selector: 'app-board-square',\n    template: `\n                         \n    \n        \n            \n        \n    \n    `, styles: [`\n    :host, .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    `]\n})\nexport class BoardSquareComponent {\n    @Input() position: Coord;\n    get black() {\n         const { x, y } = this.position;\n         return (x + y) % 2 === 1;\n    }\n\n    // step 2\n    target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n\n    });\n\n    // step 1\n    constructor(private dnd: SkyhookDndService) { }\n\n    // step 4\n    ngOnDestroy() {\n        this.target.unsubscribe();\n    }\n\n}Parts 3 and 4: make the knight move around on drop\nNext up is to incorporate the game logic, and to actually move the knight. We're\ngoing to use two hooks in the drop target: DropTargetSpec.canDrop and\nDropTargetSpec.drop. We have already done the heavy lifting for both in\nGameService. Inject GameService in the constructor, and incorporate its\nmethods.\ntarget = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n    canDrop: monitor => {\n        return this.game.canMoveKnight(this.position);\n    },\n    drop: monitor => {\n        this.game.moveKnight(this.position);\n    }\n});\n\nconstructor(private dnd: SkyhookDndService, private gme: GameService) {}Now you should be able to drag your knight around the board!\nPart 5: Extra visuals\nWe have some guidance already about where you can drop a knight. The mouse\ncursor gets a different icon depending on whether you can or not. But usually,\nthis is not enough of an indicator. Good UI means making difficult things\nobvious and learnable. Someone who has never seen a knight should be able to\nfigure out where one can go.\nIn that spirit, we will change the colour of the squares while dragging,\ndepending on whether they represent a valid move, and colour the square you're\nhovering over either red or green depending on whether dropping would result in\na move.\nThe procedure is almost identical to what we did for the Knight earlier on.\n\nUse the DropTarget.listen, DropTargetMonitor.canDrop and\nDropTargetMonitor.isOver methods to observe changes in drag state\nUse observables in your template to change styles on an overlay div.\n\n// We are assuming RxJS 5.5+ here, but you can use plain Observable.map\nimport { map } from 'rxjs/operators';\n\n// template:    \n        \n            \n        \n        \n    \nexport class BoardSquareComponent {\n    // ...\n    target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n        // ...\n    });\n\n    collected$ = this.target.listen(m => ({\n        canDrop: m.canDrop(),\n        isOver: m.isOver(),\n    }));\n\n    showOverlay$ = this.collected$.pipe(map(c => c.isOver || c.canDrop));\n\n    overlayStyle$ = this.collected$.pipe(map(coll => {\n        let { canDrop, isOver } = coll;\n        let bg: string = \"rgba(0,0,0,0)\";\n        if (canDrop && isOver) { bg = 'green'; }\n        else if (canDrop && !isOver) { bg = 'yellow'; }\n        else if (!canDrop && isOver) { bg = 'red'; }\n        return {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: '100%',\n            zIndex: 1,\n            opacity: 0.5,\n            backgroundColor: bg\n        }\n    }));\n\n    // ...\n\n}Here's what it looks like:\n\nLastly, we're going to customize the drag preview (that little knight that\nfollows the mouse around). @angular-skyhook has some very powerful ways to\ncustomize this, but we're going to use a simple image. It's quite simple:\n\nCreate an Image\nWait for it to load\nConnect it to the knightSource as a drag preview\n\nWe can do this in just a few lines.\n// ...\nexport class KnightComponent {\n    // ...\n\n    ngOnInit() {\n        const img = new Image();\n        img.src = // ... long 'data:image/png;base64' url\n                  // regular 'https://' URLs work here too\n        img.onload = () => this.knightSource.connectDragPreview(img);\n    }\n}For that long URL, see this file.\nThen we get a funky horse as our preview.\n\nHave a go with the live demo here.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/translating-react-code.html":{"url":"additional-documentation/translating-react-code.html","title":"additional-page - Translating React Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTranslating React Code\nThere are many code examples and libraries on the web written for react-dnd,\nthe most important of which is the actual react-dnd\ndocumentation. In the\ninterest of making them useful or at least understandable, this library presents\na fairly similar API to the original. There are, of course, some differences\nmandated by the style and limitations of React and Angular. We will illustrate\nthis with the react-dnd DragSource compared to @angular-skyhook's\nSkyhookDndService.dragSource(). Here are the original API\ndocs on\nDragSource; the following is a small but complete example for a quick\nreference. If you know how to use react-dnd already, then this should show you\nmost of it. If you don't know react-dnd, this will help you read the example\ncode demos in the react-dnd documentation.\nHere's a basic example in React:\nlet itemSourceSpec = {\n  beginDrag: (props, monitor) => {\n    return { someProperty: props.someProperty };\n  },\n  endDrag: (props, monitor, component) => {\n    if (monitor.didDrop()) {\n      component.fireAction(monitor.getItem());\n    }\n  }\n}\n@DragSource(\"ITEM\", itemSourceSpec, (connect, monitor) => ({\n  connectDragSource: connect.connectDragSource(),\n  isDragging: monitor.isDragging(),\n}))\nexport class MyComponent extends React.Component {\n  fireAction() { /* ... */ }\n  render() {\n    const { someProperty, isDragging } = this.props;\n    return connectDragSource(\n      \n        {someProperty}\n        {isDragging ? 'I am being dragged now' : null}\n      \n    );\n  }\n}And here's the Angular translation:\n@Component({\n  template: `  \n    {{someProperty}}\n    \n      I am being dragged now\n    \n  \n  `})\nexport class MyComponent {\n  @Input() someProperty: string;\n  itemSource = dnd.dragSource(\"ITEM\", {\n    beginDrag: (monitor) => {\n      return { someProperty: this.someProperty };\n    },\n    endDrag: (monitor) => {\n      if (monitor.didDrop()) {\n        this.fireAction(monitor.getItem());\n      }\n    }\n  });\n  collected$ = this.itemSource.listen(monitor => ({\n    isDragging: monitor.isDragging(),\n  }));\n  constructor(private dnd: SkyhookDndService) {}\n  fireAction(item) { /* ... */ }\n  ngOnDestroy() { this.itemSource.destroy(); }\n}As you can see, the two are very similar. You should be able to take most\nReact/react-dnd examples and translate them quite directly into Angular. You\ncan almost copy and paste some parts.\n1. Biggest difference: Connections instead of Higher-Order Components\nThere is a React concept of 'props', similar to Input() in Angular. The\nprimary difference relevant to us is that in React you can create a 'wrapper' or\n'higher-order' component that will pass all of its props to the one it is\n'wrapping' or 'decorating', with extra behaviour or new props added. This is how\nreact-dnd works: wrap your component with @DragSource(type, spec, collect:\n(connect, monitor) => Object), and the output of the  collect function is\ninjected into your component's props.\nIn Angular, we run everything inside your component, using methods on an\ninjected SkyhookDndService to create connections. Connections are a go-between\nfor subscribing to the global drag state and can be connected to DOM\nelements. This difference is typical of the React Way and the Angular Way. You\ncan create more than one connection for a component, to accomplish the same\nthing as composing multiple decorators in react-dnd.\nThere are five other ways this approach makes for slightly different-looking but\nvery similar-functioning code.\n2. You must destroy the connection object when you are done with it.\nIn React, this is managed by the wrapper component. In Angular, you have to do\nit yourself. See ConnectionBase.unsubscribe.\n3. No props or component arguments in the spec callbacks\nThere are no props in Angular, as discussed above. Instead, all inputs to a component\nor properties relevant to the template are declared on the component class.\nTherefore, using this is appropriate instead. That also makes component\nmoot, since it would also refer to this. Therefore, all of the callbacks on the\ntwo *Spec interfaces have only monitor as an argument.\nOne thing to be aware of is that to access this in an function you pass\nelsewhere, you must use Arrow notation: (arrow) => this.notation; for your\nspec callbacks.\n4. Information about current drag state comes through an Observable\nIn react-dnd the collect((props, monitor) => {}) function supplies the\ncomponent props 'from above'. In Angular (here, DragSource.listen), the\nlibrary gives you an Observable you can subscribe to in your template. The\nexample above creates an Object { ... } and subscribes to it all in one go\n(the internals make this efficient), but you are free to do listen(m =>\nm.isDragging()), with one subscription for each interesting value. You might\ncombine information from two different connections using\nObservable.combineLatest, for example.\nI found the terms connect and collect far too similar and confusing, so\nI renamed collect to listen.\n5. connectDragSource() (etc.) functions vs Angular directives\nIn the example above, connect.connectDragSource() returns a function that will\nlink up a particular part of the JSX template's DOM to the wrapper component. To\naccomplish the same thing in Angular we must connect some DOM from the template\nto a Connection object. The Angular Way to do this is with a directive,\nwhich connects to the DOM via its injected ElementRef. The Angular translation\nabove uses [dragSource]=\"itemSource\" on the same part of the template as the\nReact code does.\nSome React examples will have two different drag sources + associated connectors\n(on different DOM elements), or one source and one connectDragPreview. Angular\ncan do both patterns with directives, because each directive is linked to one Connection.\n6. Can't supply a dynamic type via a (props) => props.type callback, use setType instead\nImagine you want to make a component draggable based on type(s) specified on the\ncomponent inputs.\nreact-dnd allows strings and ES6 Symbols in the type argument. But you can\nalso pass a function  of (props) => string|symbol; in this way, your item\ntypes can depend on the inputs to your component, and even change over time when\nthe props change. It's not a plain asynchronous callback like the rest of the\nspec, it is called when the props change on the decorating component, before any\nasynchronous drag operations start. Angular doesn't have a way for arbitrary\nobjects to listen to ngOnChanges(), so we have to do it manually.\nYou can supply a default type, or null, and update it in later as the\n@Input() property is populated. If you supply null, @angular-skyhook will\ndefer connecting the DOM and the subscription to the monitor until this is\ndone. See DragSource.setType for more information.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
